{
    guess: 123,
    fn: (function()
    {
    var ____properties____ = {
            array: [1, 2]
        };
        Object.keys(____properties____).forEach@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        return ____function____;
    })()
}
offsets: 	0:[0,2], 1:[19,44], 2:[45,75], 3:[76,96]
[0]:	• {
[1]:	•••• fn:• (function() •••• {
[2]:	•••• var• ____properties____• =• {
[3]:	•[12]• array:• [

offsets: 0:[75,100], 1:[101,111], 2:[265,273], 3:[274,275]                           
[0]:            array: [1, 2]
[1]:        };
[2]:    })()
[3]:}

-->>
{<--
    guess: 123,             
 ^_________________________________openOffsets[0] = (openResults.end[0] = 2) -1 = 1
 _______        
|   -->>\  
|   fn: (function()
|   {<--                        
|    ^_____________________________openOffsets[1] = (openResults.end[1] = 44) -1 = 43
|  __________________________
| |                      -->>\
| | var ____properties____ = {<--  
| |                           ^____openOffsets[2] = (openResults.end[2] = 75) - 1 = 74
| |    
| |                     ___________openOffsets[3] = (openResults.end[0] = 96) - 1 = 95,   
| |                    v
| |               -->> <--
| |            array: [1, 2]
| |                     --> <<--      
| |  -->  <<--            ^_______closeOffsets[3] = (closeResults.end[0] = 100) - 1 = 99
| |     };
| |_____/  
|      ^__________________________closeOffsets[2] = (closeResults.end[1] = 111) - 2 = 109
| 
|       Object.keys(____properties____).forEach@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
|       return ____function____;
|-->    <<--
|   })()                 
|___/
   ^______________________________closeOffsets[1] = (closeResults.end[2] = 274) - 4 = 269
 
-->
}<<--                              
\_________________________________closeOffsets[0] = (closeResults.end[3] = 275) - 1 = 274

0: 1
1: 43
2: 74
3: 95

0: 99
1: 109
2: 269
3: 274









3: 274
0: 99
1: 109
2: 269

3: 274
2: 269
0: 99
1: 109

3: 274
2: 269
1: 109
0: 99










[0]:{
[1]:     fn:  (function()      {
[2]:     var  ____properties____  =  {
[3]:             array:  [

offsets: 0:[0,1], 1:[18,43], 2:[44,74], 3:[75,95]

{
    guess: 123,
    fn: (function()
    {
    var ____properties____ = {
            array: [1, 2]
        };
        Object.keys(____properties____).forEach@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
        return ____function____;
    })()
}







{
    guess: 123,
    "fn": 
		(function()
		{
			var ____properties____ = 
			{
				array: 
					[1, 2, "cat", 'dog']
			};
			return ____function____;
		})()
}


offsets: 	0:[0,46], 1:[46,80], 2:[80,99]
[0]: {\n
		guess: 123,\n
		"fn": \n
			(function()\n
			{
[1]:			47,156
				\n
				var ____properties____ = \n
				{
[2]:				\n
					array: \n
					[
                            -1            -1           -1
offsets:  	           0:[0,46],    1:[46,80],   2:[80,99]


                          +1           +1           +1
offsets: 	0:[0,117], 1:[117,122], 2:[122,155], 3:[155,160]

[0]:	{\n
			guess: 123,\n
			"fn": \n
			
			
			(function()\n
			   .............................. open.end[0] -1
			  /     last char of begWrap
			45,156  
			{\n
				var ____properties____ = 
				   .......................... open.end[1] -1
				  /
				79,123
				{\n
					array: 
					   ...................... open.end[2] -1
					  /
					98,118
					[
						1, 2, "cat", 'dog'


[1]:................]\n
					\___118................. close.start[1] + 1
[2]:			};\n
				\___123..................... close.start[2] + 1
				return ____function____;\n
[3]:	})()\n
		\___156............................. close.start[3] + 1
		       1st char or endWrap









	0:[0,119], 1:[119,129], 2:[129,169], 3:[169,174]
	
[0]:	{\n
		guess: 123,\n
		
		"fn": (function()\n
		{\n
		var ____properties____ = {\n
		array: [1, 2, "cat", 'dog'

[1]:	]\n

[2]:	};\n

return ____function____;\n

[3]:	})()\n
