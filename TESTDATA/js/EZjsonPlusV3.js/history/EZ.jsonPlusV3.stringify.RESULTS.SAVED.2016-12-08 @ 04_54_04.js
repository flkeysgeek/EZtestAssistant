EZ.test.savedResults=		//Saved @ 12-08-2016 04:54:04 am
[
	'"test #1 no data"'
,
	'"test #2 no data"'
,
	'"test #3 no data"'
,
	'"test #4 no data"'
,
	'"test #5 no data"'
,
	'"test #6 no data"'
,
	'"test #7 no data"'
,
	'"test #8 no data"'
,
	'"test #9 no data"'
,
	'"test #10 no data"'
,
	'"test #11 no data"'
,
	'"test #12 no data"'
,
	'"test #13 no data"'
,
	'"test #14 no data"'
,
	'"test #15 no data"'
,
	'"test #16 no data"'
,
	'"test #17 no data"'
,
	'"test #18 no data"'
,
	'"test #19 no data"'
,
	'"test #20 no data"'
,
	'"test #21 no data"'
,
	'"test #22 no data"'
,
	'"test #23 no data"'
,
	'"test #24 no data"'
,
	'"test #25 no data"'
,
	'"test #26 no data"'
,
	'"test #27 no data"'
,
	'"test #28 no data"'
,
	'"test #29 no data"'
,
	'"test #30 no data"'
,
	'"test #31 no data"'
,
	'"test #32 no data"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 33,\n'
	+ '    id: "arg1=1st arg (value):NaN,arg2=2nd arg (replacer):[ignore,validate],2nd arg (replacer).ignore:NaN,2nd arg (replacer).validate:true,note:<b>simplejson--previouslyhandledw/ocallingstringify:&nbsp;&nbsp;Number</b>nativeJSON.stringify()returnsnull",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\n&nbsp;&nbsp;Number</b>\\nnative JSON.stringify() returns null\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: null,\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [NaN]  -->  [null]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: NaN"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "null"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: null,\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [NaN]  -->  [null]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: NaN"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "null"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:46 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 34,\n'
	+ '    id: "arg1=1st arg (value):NaN,arg2=2nd arg (replacer):[ignore,validate],2nd arg (replacer).ignore:NaN,2nd arg (replacer).validate:false,note:<b>simplejson--previouslyhandledw/ocallingstringify:&nbsp;&nbsp;Number</b>nativeJSON.stringify()returnsnull",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\n&nbsp;&nbsp;Number</b>\\nnative JSON.stringify() returns null\\n<b>no errors reported</b>\\n<cite>clone from json</cite><em> not returned</em>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "not returned",\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [NaN]  -->  [null]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: NaN"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "null"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "not returned",\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [NaN]  -->  [null]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: NaN"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "null"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:46 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 35,\n'
	+ '    id: "arg1=1st arg (value):NaN,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simplejson--previouslyhandledw/ocallingstringify:&nbsp;&nbsp;Number</b>nativeJSON.stringify()returnsnull",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\n&nbsp;&nbsp;Number</b>\\nnative JSON.stringify() returns null\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=NaN"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "NaN"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: NaN\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=NaN"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "NaN"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: NaN\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:46 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 36,\n'
	+ '    id: "arg1=1st arg (arg):[],arg2=2nd arg (replacer):[ignore],2nd arg (replacer).ignore:Date,note:<b>standaloneDates</b>nativeJSONDateformat",\n'
	+ '    note: "<b>standalone Dates</b>\\nnative JSON Date format\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "2016-06-13T12:00:00.000Z",\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [06/13/2016 08:00:00.000 am]\\n  -->  [\\"2016-06-13T12:00:00.000Z\\"]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: 06/13/2016 08:00:00.000 am"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"2016-06-13T12:00:00.000Z\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "2016-06-13T12:00:00.000Z",\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [06/13/2016 08:00:00.000 am]\\n  -->  [\\"2016-06-13T12:00:00.000Z\\"]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: 06/13/2016 08:00:00.000 am"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"2016-06-13T12:00:00.000Z\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:47 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 37,\n'
	+ '    id: "arg1=1st arg (arg):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>standaloneDates</b>",\n'
	+ '    note: "<b>standalone Dates</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (arg)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date(\'06/13/2016 08:00:00.000 am\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "06/13/2016 08:00:00.000 am"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'06/13/2016 08:00:00.000 am\')\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=new Date(\'06/13/2016 08:00:00.000 am\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "06/13/2016 08:00:00.000 am"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'06/13/2016 08:00:00.000 am\')\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:47 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 38,\n'
	+ '    id: "arg1=1st arg (new Date(######)):[],note:<b>standaloneDates</b>invaliddate",\n'
	+ '    note: "<b>standalone Dates</b>\\ninvalid date\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (new Date(######))",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date(\'Invalid Date\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Invalid Date"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'Invalid Date\')\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=new Date(\'Invalid Date\')"\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'Invalid Date\')\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:48 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 39,\n'
	+ '    id: "arg1=1st arg (new Date(######)):[],arg2=2nd arg (replacer):[],note:<b>standaloneDates</b>invaliddate",\n'
	+ '    note: "<b>standalone Dates</b>\\ninvalid date\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (new Date(######))",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date(\'Invalid Date\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Invalid Date"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'Invalid Date\')\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=new Date(\'Invalid Date\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Invalid Date"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'Invalid Date\')\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:48 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 40,\n'
	+ '    id: "arg1=1st arg (new Date(######)):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>standaloneDates</b>invaliddate",\n'
	+ '    note: "<b>standalone Dates</b>\\ninvalid date\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (new Date(######))",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date(\'Invalid Date\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Invalid Date"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'Invalid Date\')\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=new Date(\'Invalid Date\')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Invalid Date"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: new Date(\'Invalid Date\')\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:49 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 41,\n'
	+ '    id: "arg1=1st arg (arg):[],arg2=2nd arg (replacer):[ignore,validate,info],2nd arg (replacer).ignore:Date,2nd arg (replacer).validate:true,2nd arg (replacer).info:all,note:<b>standaloneDates</b>",\n'
	+ '    note: "<b>standalone Dates</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "1970-01-01T00:00:00.000Z",\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [12/31/1969 07:00:00.000 pm]\\n  -->  [\\"1970-01-01T00:00:00.000Z\\"]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: 12/31/1969 07:00:00.000 pm"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"1970-01-01T00:00:00.000Z\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "1970-01-01T00:00:00.000Z",\n'
	+ '        1: {\n'
	+ '            changed_values: [\n'
	+ '                "[$] [12/31/1969 07:00:00.000 pm]\\n  -->  [\\"1970-01-01T00:00:00.000Z\\"]"\n'
	+ '            ],\n'
	+ '            ignored_values: [\n'
	+ '                "[$]: 12/31/1969 07:00:00.000 pm"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"1970-01-01T00:00:00.000Z\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:49 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 42,\n'
	+ '    id: "arg1=1st arg (value):[],arg2=2nd arg (replacer):[],note:<b>RegExp</b>nativereturnRegExpasemptyObject:\\"{}\\"",\n'
	+ '    note: "<b>RegExp</b>\\nnative return RegExp as empty Object: \\"{}\\"\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/gim;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/abc/gim;"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: /abc/gim;\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=/abc/gim;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/abc/gim;"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: /abc/gim;\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:49 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 43,\n'
	+ '    id: "arg1=1st arg (value):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>RegExp</b>",\n'
	+ '    note: "<b>RegExp</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/gim;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/abc/gim;"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: /abc/gim;\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.expected.0=/abc/gim;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/abc/gim;"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"@JSON_escapeMarker@: /abc/gim;\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:50 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 44,\n'
	+ '    id: "arg1=1st arg (arr):[0,1],1st arg (arr)[0]:[],1st arg (arr)[1]:[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>RegExp</b>",\n'
	+ '    note: "<b>RegExp</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (arr)",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.0=/abc/gim;"\n'
	+ '            },\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.1=/xyz/;#.lastIndex=3"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "$.0=/abc/gim;",\n'
	+ '                "$.1=/xyz/;#.lastIndex=3"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    {\\n        \\"@JSON_escapeMarker@\\": \\"$.0=/abc/gim;\\"\\n    },\\n    {\\n        \\"@JSON_escapeMarker@\\": \\"$.1=/xyz/;#.lastIndex=3\\"\\n    }\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.expected.0.0=/abc/gim;"\n'
	+ '            },\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.expected.0.1=/xyz/;#.lastIndex=3"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "$.0=/abc/gim;",\n'
	+ '                "$.1=/xyz/;#.lastIndex=3"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    {\\n        \\"@JSON_escapeMarker@\\": \\"$.0=/abc/gim;\\"\\n    },\\n    {\\n        \\"@JSON_escapeMarker@\\": \\"$.1=/xyz/;#.lastIndex=3\\"\\n    }\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:50 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 45,\n'
	+ '    id: "arg1=1st arg (arg):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>RegExp</b>lastIndex=1",\n'
	+ '    note: "<b>RegExp</b>\\nlastIndex=1\\nactual <cite>return value</cite> set to JSON messages\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/xyz/gim;#.lastIndex=1"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/xyz/gim;#.lastIndex=1"\n'
	+ '            ],\n'
	+ '            stackTrace: [\n'
	+ '                "SyntaxError: Invalid or unexpected token",\n'
	+ '                "   at returnParseValue:453               (.../EZjsonPlusV3.js:453)",\n'
	+ '                "   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)",\n'
	+ '                "   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)",\n'
	+ '                "   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)",\n'
	+ '                "   at Function.JSON_stringify_test:2770  (.../EZjsonPlusV3.js:2770)",\n'
	+ '                "   at .../EZtest_assistant_run.js:406    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "EXCEPTION:\\nInvalid or unexpected token\\nSyntaxError: Invalid or unexpected token\\n   at returnParseValue:453               (.../EZjsonPlusV3.js:453)\\n   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)\\n   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)\\n   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)\\n   at Function.JSON_stringify_test:2770  (.../EZjsonPlusV3.js:2770)\\n   at .../EZtest_assistant_run.js:406"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/xyz/gim;#.lastIndex=1"\n'
	+ '            ],\n'
	+ '            stackTrace: [\n'
	+ '                "SyntaxError: Invalid or unexpected token",\n'
	+ '                "   at returnParseValue:453               (.../EZjsonPlusV3.js:453)",\n'
	+ '                "   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)",\n'
	+ '                "   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)",\n'
	+ '                "   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)",\n'
	+ '                "   at Function.JSON_stringify_test:2770  (.../EZjsonPlusV3.js:2770)",\n'
	+ '                "   at .../EZtest_assistant_run.js:406    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "EXCEPTION:\\nInvalid or unexpected token\\nSyntaxError: Invalid or unexpected token\\n   at returnParseValue:453               (.../EZjsonPlusV3.js:453)\\n   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)\\n   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)\\n   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)\\n   at Function.JSON_stringify_test:2770  (.../EZjsonPlusV3.js:2770)\\n   at .../EZtest_assistant_run.js:406"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:51 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 46,\n'
	+ '    id: "arg1=1st arg (arg):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>RegExp</b><em>lastIndex:9toobig</em>",\n'
	+ '    note: "<b>RegExp</b>\\n<em>lastIndex:9 too big </em>\\nactual <cite>return value</cite> set to JSON messages\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/xyz/gim;#.lastIndex=9"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/xyz/gim;#.lastIndex=9"\n'
	+ '            ],\n'
	+ '            stackTrace: [\n'
	+ '                "SyntaxError: Invalid or unexpected token",\n'
	+ '                "   at returnParseValue:453               (.../EZjsonPlusV3.js:453)",\n'
	+ '                "   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)",\n'
	+ '                "   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)",\n'
	+ '                "   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)",\n'
	+ '                "   at Function.JSON_stringify_test:2774  (.../EZjsonPlusV3.js:2774)",\n'
	+ '                "   at .../EZtest_assistant_run.js:406    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "EXCEPTION:\\nInvalid or unexpected token\\nSyntaxError: Invalid or unexpected token\\n   at returnParseValue:453               (.../EZjsonPlusV3.js:453)\\n   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)\\n   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)\\n   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)\\n   at Function.JSON_stringify_test:2774  (.../EZjsonPlusV3.js:2774)\\n   at .../EZtest_assistant_run.js:406"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "/xyz/gim;#.lastIndex=9"\n'
	+ '            ],\n'
	+ '            stackTrace: [\n'
	+ '                "SyntaxError: Invalid or unexpected token",\n'
	+ '                "   at returnParseValue:453               (.../EZjsonPlusV3.js:453)",\n'
	+ '                "   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)",\n'
	+ '                "   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)",\n'
	+ '                "   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)",\n'
	+ '                "   at Function.JSON_stringify_test:2774  (.../EZjsonPlusV3.js:2774)",\n'
	+ '                "   at .../EZtest_assistant_run.js:406    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "EXCEPTION:\\nInvalid or unexpected token\\nSyntaxError: Invalid or unexpected token\\n   at returnParseValue:453               (.../EZjsonPlusV3.js:453)\\n   at new JSON_parse:418                 (.../EZjsonPlusV3.js:418)\\n   at JSON_stringify:1013                (.../EZjsonPlusV3.js:1013)\\n   at EZtest_run:961                     (.../EZtest_assistant_run.js:961)\\n   at Function.JSON_stringify_test:2774  (.../EZjsonPlusV3.js:2774)\\n   at .../EZtest_assistant_run.js:406"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:51 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 47,\n'
	+ '    id: "arg1=1st arg (obj):[fn],1st arg (obj).fn:[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Function</b>",\n'
	+ '    note: "<b>Function</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            fn: {}\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    fn: {}\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            fn: {}\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    fn: {}\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:51 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 48,\n'
	+ '    id: "arg1=1st arg (obj):[0,1],1st arg (obj)[0]:undefined,1st arg (obj)[1]:1,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>non-supportedvalues</b>obj[0]:undefined",\n'
	+ '    note: "<b>non-supported values</b>\\nobj[0]: undefined\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            0: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.0=undefined"\n'
	+ '            },\n'
	+ '            1: 1\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "$.0=undefined"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    0: {\\n        \\"@JSON_escapeMarker@\\": \\"$.0=undefined\\"\\n    },\\n    1: 1\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            0: {\n'
	+ '                "@JSON_escapeMarker@": "$.expected.0.0=undefined"\n'
	+ '            },\n'
	+ '            1: 1\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "$.0=undefined"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    0: {\\n        \\"@JSON_escapeMarker@\\": \\"$.0=undefined\\"\\n    },\\n    1: 1\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:52 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 49,\n'
	+ '    id: "arg1=1st arg (value):,note:<b>simpleStrings</b>emptystring",\n'
	+ '    note: "<b>simple Strings</b>\\nempty string\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:52 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 50,\n'
	+ '    id: "arg1=1st arg (value):embedded \\"me\\" double quotes,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleStrings</b>",\n'
	+ '    note: "<b>simple Strings</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: "embedded \\"me\\" double quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded \\\\\\"me\\\\\\" double quotes\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "embedded \\"me\\" double quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded \\\\\\"me\\\\\\" double quotes\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:53 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 51,\n'
	+ '    id: "arg1=1st arg (value):embedded \'me\' single quotes,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleStrings</b>",\n'
	+ '    note: "<b>simple Strings</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: "embedded \'me\' single quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded \'me\' single quotes\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "embedded \'me\' single quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded \'me\' single quotes\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:53 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 52,\n'
	+ '    id: "arg1=1st arg (value):multi-line \\n line 2,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleStrings</b>",\n'
	+ '    note: "<b>simple Strings</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: "multi-line \\n line 2",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"multi-line \\\\n line 2\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "multi-line \\n line 2",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"multi-line \\\\n line 2\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:53 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 53,\n'
	+ '    id: "arg1=1st arg (obj):[yes,no],1st arg (obj).yes:true,1st arg (obj).no:false,arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:false,2nd arg (opts).ignore:constructor,arg3=3rd arg (spaces):0,note:<b>EZoptionsObject</b>shouldreportnon-standardconstructor",\n'
	+ '    note: "<b>EZoptions Object</b>\\nshould report non-standard constructor\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            yes: true,\n'
	+ '            no: false\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        2: 0,\n'
	+ '        results: "{\\"yes\\":true,\\"no\\":false}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            yes: true,\n'
	+ '            no: false\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\"yes\\":true,\\"no\\":false}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:54 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 54,\n'
	+ '    id: "arg1=1st arg (obj):[a],1st arg (obj).a:abc,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>functions:</b>fnhasStringproperty",\n'
	+ '    note: "<b>functions:</b> fn has String property\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "abc"\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: \\"abc\\"\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: "abc"\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: \\"abc\\"\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:54 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 55,\n'
	+ '    id: "arg1=1st arg (obj):[a],1st arg (obj).a:[yes,no],1st arg (obj).a.yes:true,1st arg (obj).a.no:false,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>functions:</b>fnhasObjectproperty",\n'
	+ '    note: "<b>functions:</b> fn has Object property\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:55 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 56,\n'
	+ '    id: "arg1=1st arg (obj):[a],1st arg (obj).a:[yes,no],1st arg (obj).a.yes:true,1st arg (obj).a.no:false,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>functions:</b>fnhasEZoptionsproperty",\n'
	+ '    note: "<b>functions:</b> fn has EZoptions property\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:55 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 57,\n'
	+ '    id: "arg1=1st arg (arr):[0,1,yes],1st arg (arr)[0]:0,1st arg (arr)[1]:1,1st arg (arr).yes:true,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Arraynamedproperties</b>",\n'
	+ '    note: "<b>Array named properties</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (arr)",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0",\n'
	+ '                yes: true\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$\\",\\n    \\"yes\\": true\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    0,\\n    1,\\n    {\\n        \\"@JSON_escapeMarker@\\": \\"$\\",\\n        yes: true\\n    }\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.expected.0",\n'
	+ '                yes: true\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$\\",\\n    \\"yes\\": true\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    0,\\n    1,\\n    {\\n        \\"@JSON_escapeMarker@\\": \\"$\\",\\n        yes: true\\n    }\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:55 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 58,\n'
	+ '    id: "arg1=1st arg (value):[my],1st arg (value).my:[0,1,yes],1st arg (value).my[0]:0,1st arg (value).my[1]:1,1st arg (value).my.yes:true,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Arraynamedproperties</b>",\n'
	+ '    note: "<b>Array named properties</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            my: [\n'
	+ '                0,\n'
	+ '                1,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.actual.0.my",\n'
	+ '                    yes: true\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.my\\",\\n    \\"yes\\": true\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    my: [\\n        0,\\n        1,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.my\\",\\n            yes: true\\n        }\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            my: [\n'
	+ '                0,\n'
	+ '                1,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.expected.0.my",\n'
	+ '                    yes: true\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.my\\",\\n    \\"yes\\": true\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    my: [\\n        0,\\n        1,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.my\\",\\n            yes: true\\n        }\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:56 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 59,\n'
	+ '    id: "arg1=1st arg (value):[0],1st arg (value)[0]:[0,1,yes],1st arg (value)[0][0]:0,1st arg (value)[0][1]:1,1st arg (value)[0].yes:true,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Arraynamedproperties</b>",\n'
	+ '    note: "<b>Array named properties</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                0,\n'
	+ '                1,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.actual.0.0",\n'
	+ '                    yes: true\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n    \\"yes\\": true\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        0,\\n        1,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n            yes: true\\n        }\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                0,\n'
	+ '                1,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.expected.0.0",\n'
	+ '                    yes: true\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n    \\"yes\\": true\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        0,\\n        1,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n            yes: true\\n        }\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:56 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 60,\n'
	+ '    id: "arg1=1st arg (actual):[0,1],1st arg (actual)[0]:[0,more],1st arg (actual)[0][0]:8,1st arg (actual)[0].more:abc,1st arg (actual)[1]:[0,more,colors],1st arg (actual)[1][0]:9,1st arg (actual)[1].more:xyz,1st arg (actual)[1].colors:[0,1],1st arg (actual)[1].colors[0]:red,1st arg (actual)[1].colors[1]:blue,arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:false,2nd arg (opts).ignore:Array,note:<b>Arraynamedproperties</b>ignoreArraynamedproperties--sameasJSON.stringify",\n'
	+ '    note: "<b>Array named properties</b>\\nignore Array named properties -- same as JSON.stringify\\n<em>JSON.plus messages:\\n</em>isOk() is true\\nJSON.plus.validate() failed\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                8,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.actual.0.0",\n'
	+ '                    more: "abc"\n'
	+ '                }\n'
	+ '            ],\n'
	+ '            [\n'
	+ '                9,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.actual.0.1",\n'
	+ '                    more: "xyz",\n'
	+ '                    colors: [\n'
	+ '                        "red",\n'
	+ '                        "blue"\n'
	+ '                    ]\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "specified Object [ObjectLike] ... clone from json [Array]",\n'
	+ '                "[0] *keys do not match*",\n'
	+ '                "  + more:                     ... na                     ",\n'
	+ '                "[0] [ObjectLike]              !== [ObjectLike]           ",\n'
	+ '                "[1] *keys do not match*",\n'
	+ '                "  + more:                     ... na                     ",\n'
	+ '                "  + colors:                   ... na                     ",\n'
	+ '                "[1] [ObjectLike]              !== [ObjectLike]           "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        8\\n    ],\\n    [\\n        9\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                8\n'
	+ '            ],\n'
	+ '            [\n'
	+ '                9\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "specified Object [ObjectLike] ... clone from json [Array]",\n'
	+ '                "[0] *keys do not match*",\n'
	+ '                "  + more:                     ... na                     ",\n'
	+ '                "[0] [ObjectLike]              !== [ObjectLike]           ",\n'
	+ '                "[1] *keys do not match*",\n'
	+ '                "  + more:                     ... na                     ",\n'
	+ '                "  + colors:                   ... na                     ",\n'
	+ '                "[1] [ObjectLike]              !== [ObjectLike]           "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        8\\n    ],\\n    [\\n        9\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:57 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 61,\n'
	+ '    id: "arg1=1st arg (actual):[0,1],1st arg (actual)[0]:[0,more],1st arg (actual)[0][0]:8,1st arg (actual)[0].more:abc,1st arg (actual)[1]:[0,more,colors],1st arg (actual)[1][0]:9,1st arg (actual)[1].more:xyz,1st arg (actual)[1].colors:[0,1],1st arg (actual)[1].colors[0]:red,1st arg (actual)[1].colors[1]:blue,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Arraynamedproperties</b>",\n'
	+ '    note: "<b>Array named properties</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (actual)",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                8,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.actual.0.0",\n'
	+ '                    more: "abc"\n'
	+ '                }\n'
	+ '            ],\n'
	+ '            [\n'
	+ '                9,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.actual.0.1",\n'
	+ '                    more: "xyz",\n'
	+ '                    colors: [\n'
	+ '                        "red",\n'
	+ '                        "blue"\n'
	+ '                    ]\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.1\\",\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        8,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n            more: \\"abc\\"\\n        }\\n    ],\\n    [\\n        9,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.1\\",\\n            more: \\"xyz\\",\\n            colors: [\\n                \\"red\\",\\n                \\"blue\\"\\n            ]\\n        }\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                8,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.expected.0.0",\n'
	+ '                    more: "abc"\n'
	+ '                }\n'
	+ '            ],\n'
	+ '            [\n'
	+ '                9,\n'
	+ '                {\n'
	+ '                    "@JSON_escapeMarker@": "$.expected.0.1",\n'
	+ '                    more: "xyz",\n'
	+ '                    colors: [\n'
	+ '                        "red",\n'
	+ '                        "blue"\n'
	+ '                    ]\n'
	+ '                }\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.1\\",\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        8,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.0\\",\\n            more: \\"abc\\"\\n        }\\n    ],\\n    [\\n        9,\\n        {\\n            \\"@JSON_escapeMarker@\\": \\"$.1\\",\\n            more: \\"xyz\\",\\n            colors: [\\n                \\"red\\",\\n                \\"blue\\"\\n            ]\\n        }\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:57 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 62,\n'
	+ '    id: "arg1=1st arg (obj):[actual],1st arg (obj).actual:[0,1],1st arg (obj).actual[0]:[0,more],1st arg (obj).actual[0][0]:8,1st arg (obj).actual[0].more:abc,1st arg (obj).actual[1]:[0,more,colors],1st arg (obj).actual[1][0]:9,1st arg (obj).actual[1].more:xyz,1st arg (obj).actual[1].colors:[0,1],1st arg (obj).actual[1].colors[0]:red,1st arg (obj).actual[1].colors[1]:blue,arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:false,2nd arg (opts).ignore:Array,note:<b>Arraynamedproperties</b>ignoreArraynamedproperties--sameasJSON.stringify",\n'
	+ '    note: "<b>Array named properties</b>\\nignore Array named properties -- same as JSON.stringify\\n<em>JSON.plus messages:\\n</em>isOk() is true\\nJSON.plus.validate() failed\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            actual: [\n'
	+ '                [\n'
	+ '                    8,\n'
	+ '                    {\n'
	+ '                        "@JSON_escapeMarker@": "$.actual.0.actual.0",\n'
	+ '                        more: "abc"\n'
	+ '                    }\n'
	+ '                ],\n'
	+ '                [\n'
	+ '                    9,\n'
	+ '                    {\n'
	+ '                        "@JSON_escapeMarker@": "$.actual.0.actual.1",\n'
	+ '                        more: "xyz",\n'
	+ '                        colors: [\n'
	+ '                            "red",\n'
	+ '                            "blue"\n'
	+ '                        ]\n'
	+ '                    }\n'
	+ '                ]\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.actual.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.actual.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "specified Object [Object] ... clone from json [Object]",\n'
	+ '                " .actual[0] *keys do not match*",\n'
	+ '                "  + more:                 ... na                      ",\n'
	+ '                " .actual[0] [ObjectLike]  !== [ObjectLike]            ",\n'
	+ '                " .actual[1] *keys do not match*",\n'
	+ '                "  + more:                 ... na                      ",\n'
	+ '                "  + colors:               ... na                      ",\n'
	+ '                " .actual[1] [ObjectLike]  !== [ObjectLike]            "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    \\"actual\\": [\\n        [\\n            8\\n        ],\\n        [\\n            9\\n        ]\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            actual: [\n'
	+ '                [\n'
	+ '                    8\n'
	+ '                ],\n'
	+ '                [\n'
	+ '                    9\n'
	+ '                ]\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.actual.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.actual.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "specified Object [Object] ... clone from json [Object]",\n'
	+ '                " .actual[0] *keys do not match*",\n'
	+ '                "  + more:                 ... na                      ",\n'
	+ '                " .actual[0] [ObjectLike]  !== [ObjectLike]            ",\n'
	+ '                " .actual[1] *keys do not match*",\n'
	+ '                "  + more:                 ... na                      ",\n'
	+ '                "  + colors:               ... na                      ",\n'
	+ '                " .actual[1] [ObjectLike]  !== [ObjectLike]            "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    \\"actual\\": [\\n        [\\n            8\\n        ],\\n        [\\n            9\\n        ]\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:57 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 63,\n'
	+ '    id: "arg1=1st arg (obj):[actual],1st arg (obj).actual:[0,1],1st arg (obj).actual[0]:[0,more],1st arg (obj).actual[0][0]:8,1st arg (obj).actual[0].more:abc,1st arg (obj).actual[1]:[0,more,colors],1st arg (obj).actual[1][0]:9,1st arg (obj).actual[1].more:xyz,1st arg (obj).actual[1].colors:[0,1],1st arg (obj).actual[1].colors[0]:red,1st arg (obj).actual[1].colors[1]:blue,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Arraynamedproperties</b>",\n'
	+ '    note: "<b>Array named properties</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            actual: [\n'
	+ '                [\n'
	+ '                    8,\n'
	+ '                    {\n'
	+ '                        "@JSON_escapeMarker@": "$.actual.0.actual.0",\n'
	+ '                        more: "abc"\n'
	+ '                    }\n'
	+ '                ],\n'
	+ '                [\n'
	+ '                    9,\n'
	+ '                    {\n'
	+ '                        "@JSON_escapeMarker@": "$.actual.0.actual.1",\n'
	+ '                        more: "xyz",\n'
	+ '                        colors: [\n'
	+ '                            "red",\n'
	+ '                            "blue"\n'
	+ '                        ]\n'
	+ '                    }\n'
	+ '                ]\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.actual.0\\",\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.actual.1\\",\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    actual: [\\n        [\\n            8,\\n            {\\n                \\"@JSON_escapeMarker@\\": \\"$.actual.0\\",\\n                more: \\"abc\\"\\n            }\\n        ],\\n        [\\n            9,\\n            {\\n                \\"@JSON_escapeMarker@\\": \\"$.actual.1\\",\\n                more: \\"xyz\\",\\n                colors: [\\n                    \\"red\\",\\n                    \\"blue\\"\\n                ]\\n            }\\n        ]\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            actual: [\n'
	+ '                [\n'
	+ '                    8,\n'
	+ '                    {\n'
	+ '                        "@JSON_escapeMarker@": "$.expected.0.actual.0",\n'
	+ '                        more: "abc"\n'
	+ '                    }\n'
	+ '                ],\n'
	+ '                [\n'
	+ '                    9,\n'
	+ '                    {\n'
	+ '                        "@JSON_escapeMarker@": "$.expected.0.actual.1",\n'
	+ '                        more: "xyz",\n'
	+ '                        colors: [\n'
	+ '                            "red",\n'
	+ '                            "blue"\n'
	+ '                        ]\n'
	+ '                    }\n'
	+ '                ]\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.actual.0\\",\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "Array named properties:\\n{\\n    \\"@JSON_escapeMarker@\\": \\"$.actual.1\\",\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    actual: [\\n        [\\n            8,\\n            {\\n                \\"@JSON_escapeMarker@\\": \\"$.actual.0\\",\\n                more: \\"abc\\"\\n            }\\n        ],\\n        [\\n            9,\\n            {\\n                \\"@JSON_escapeMarker@\\": \\"$.actual.1\\",\\n                more: \\"xyz\\",\\n                colors: [\\n                    \\"red\\",\\n                    \\"blue\\"\\n                ]\\n            }\\n        ]\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:58 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 64,\n'
	+ '    id: "arg1=1st arg (divObj):[d],1st arg (divObj).d:[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>html</b>",\n'
	+ '    note: "<b>html</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (divObj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            d: {\n'
	+ '                tagName: "div",\n'
	+ '                id: "testDiv",\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.d=@HTML@"\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            html_elements: [\n'
	+ '                "[$.d]: [object HTMLDivElement]"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "$.d=div#testDiv"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    d: {\\n        tagName: \\"div\\",\\n        id: \\"testDiv\\",\\n        \\"@JSON_escapeMarker@\\": \\"$.d=@HTML@\\"\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            d: {\n'
	+ '                tagName: "div",\n'
	+ '                id: "testDiv",\n'
	+ '                "@JSON_escapeMarker@": "$.expected.0.d=@HTML@"\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            html_elements: [\n'
	+ '                "[$.d]: [object HTMLDivElement]"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "$.d=div#testDiv"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    d: {\\n        tagName: \\"div\\",\\n        id: \\"testDiv\\",\\n        \\"@JSON_escapeMarker@\\": \\"$.d=@HTML@\\"\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:58 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 65,\n'
	+ '    id: "arg1=1st arg (obj):[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],1st arg (obj)[0]:test #1 no data,1st arg (obj)[1]:test #2 no data,1st arg (obj)[2]:test #3 no data,1st arg (obj)[3]:test #4 no data,1st arg (obj)[4]:test #5 no data,1st arg (obj)[5]:test #6 no data,1st arg (obj)[6]:test #7 no data,1st arg (obj)[7]:test #8 no data,1st arg (obj)[8]:test #9 no data,1st arg (obj)[9]:test #10 no data,1st arg (obj)[10]:test #11 no data,1st arg (obj)[11]:test #12 no data,1st arg (obj)[12]:test #13 no data,1st arg (obj)[13]:test #14 no data,1st arg (obj)[14]:test #15 no data,1st arg (obj)[15]:test #16 no data,1st arg (obj)[16]:test #17 no data,1st arg (obj)[17]:test #18 no data,1st arg (obj)[18]:test #19 no data,1st arg (obj)[19]:test #20 no data,1st arg (obj)[20]:test #21 no data,1st arg (obj)[21]:test #22 no data,1st arg (obj)[22]:test #23 no data,1st arg (obj)[23]:[ok,testno,id,note,actual,expected,saveDateTime],1st arg (obj)[23].ok:false,1st arg (obj)[23].testno:24,1st arg (obj)[23].id:arg1=1st arg (fn):[],arg2=2nd arg (options):[ignore,exclude],2nd arg (options).ignore:script, constructors,2nd arg (options).exclude:Function,note:<b>Function:scriptonly</b>,1st arg (obj)[23].note:<b>Function: script only</b>\\n,1st arg (obj)[23].actual:[0,1,results],1st arg (obj)[23].actual[0]:undefined,1st arg (obj)[23].actual[1]:[ignore,exclude],1st arg (obj)[23].actual[1].ignore:script, constructors,1st arg (obj)[23].actual[1].exclude:Function,1st arg (obj)[23].actual.results:,1st arg (obj)[23].expected:[],1st arg (obj)[23].saveDateTime:11-19-2016 12:08:17 pm,arg2=2nd arg (replacer):[save,clone],2nd arg (replacer).save:true,2nd arg (replacer).clone:keep,note:<b>livefaults</b>",\n'
	+ '    note: "<b>live faults</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            "test #1 no data",\n'
	+ '            "test #2 no data",\n'
	+ '            "test #3 no data",\n'
	+ '            "test #4 no data",\n'
	+ '            "test #5 no data",\n'
	+ '            "test #6 no data",\n'
	+ '            "test #7 no data",\n'
	+ '            "test #8 no data",\n'
	+ '            "test #9 no data",\n'
	+ '            "test #10 no data",\n'
	+ '            "test #11 no data",\n'
	+ '            "test #12 no data",\n'
	+ '            "test #13 no data",\n'
	+ '            "test #14 no data",\n'
	+ '            "test #15 no data",\n'
	+ '            "test #16 no data",\n'
	+ '            "test #17 no data",\n'
	+ '            "test #18 no data",\n'
	+ '            "test #19 no data",\n'
	+ '            "test #20 no data",\n'
	+ '            "test #21 no data",\n'
	+ '            "test #22 no data",\n'
	+ '            "test #23 no data",\n'
	+ '            {\n'
	+ '                ok: false,\n'
	+ '                testno: 24,\n'
	+ '                id: "arg1=1st arg (fn):[],arg2=2nd arg (options):[ignore,exclude],2nd arg (options).ignore:script, constructors,2nd arg (options).exclude:Function,note:<b>Function:scriptonly</b>",\n'
	+ '                note: "<b>Function: script only</b>\\n",\n'
	+ '                actual: {\n'
	+ '                    0: {\n'
	+ '                        "@JSON_escapeMarker@": "$.actual.0.23.actual.0=undefined"\n'
	+ '                    },\n'
	+ '                    1: {\n'
	+ '                        ignore: "script, constructors",\n'
	+ '                        exclude: "Function"\n'
	+ '                    },\n'
	+ '                    results: ""\n'
	+ '                },\n'
	+ '                expected: {},\n'
	+ '                saveDateTime: "11-19-2016 12:08:17 pm"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "$.23.actual.0=undefined"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    \\"test #1 no data\\",\\n    \\"test #2 no data\\",\\n    \\"test #3 no data\\",\\n    \\"test #4 no data\\",\\n    \\"test #5 no data\\",\\n    \\"test #6 no data\\",\\n    \\"test #7 no data\\",\\n    \\"test #8 no data\\",\\n    \\"test #9 no data\\",\\n    \\"test #10 no data\\",\\n    \\"test #11 no data\\",\\n    \\"test #12 no data\\",\\n    \\"test #13 no data\\",\\n    \\"test #14 no data\\",\\n    \\"test #15 no data\\",\\n    \\"test #16 no data\\",\\n    \\"test #17 no data\\",\\n    \\"test #18 no data\\",\\n    \\"test #19 no data\\",\\n    \\"test #20 no data\\",\\n    \\"test #21 no data\\",\\n    \\"test #22 no data\\",\\n    \\"test #23 no data\\",\\n    {\\n        ok: false,\\n        testno: 24,\\n        id: \\"arg1=1st arg (fn):[],arg2=2nd arg (options):[ignore,exclude],2nd arg (options).ignore:script, constructors,2nd arg (options).exclude:Function,note:<b>Function:scriptonly</b>\\",\\n        note: \\"<b>Function: script only</b>\\\\n\\",\\n        actual: {\\n            0: {\\n                \\"@JSON_escapeMarker@\\": \\"$.23.actual.0=undefined\\"\\n            },\\n            1: {\\n                ignore: \\"script, constructors\\",\\n                exclude: \\"Function\\"\\n            },\\n            results: \\"\\"\\n        },\\n        expected: {},\\n        saveDateTime: \\"11-19-2016 12:08:17 pm\\"\\n    }\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            "test #1 no data",\n'
	+ '            "test #2 no data",\n'
	+ '            "test #3 no data",\n'
	+ '            "test #4 no data",\n'
	+ '            "test #5 no data",\n'
	+ '            "test #6 no data",\n'
	+ '            "test #7 no data",\n'
	+ '            "test #8 no data",\n'
	+ '            "test #9 no data",\n'
	+ '            "test #10 no data",\n'
	+ '            "test #11 no data",\n'
	+ '            "test #12 no data",\n'
	+ '            "test #13 no data",\n'
	+ '            "test #14 no data",\n'
	+ '            "test #15 no data",\n'
	+ '            "test #16 no data",\n'
	+ '            "test #17 no data",\n'
	+ '            "test #18 no data",\n'
	+ '            "test #19 no data",\n'
	+ '            "test #20 no data",\n'
	+ '            "test #21 no data",\n'
	+ '            "test #22 no data",\n'
	+ '            "test #23 no data",\n'
	+ '            {\n'
	+ '                ok: false,\n'
	+ '                testno: 24,\n'
	+ '                id: "arg1=1st arg (fn):[],arg2=2nd arg (options):[ignore,exclude],2nd arg (options).ignore:script, constructors,2nd arg (options).exclude:Function,note:<b>Function:scriptonly</b>",\n'
	+ '                note: "<b>Function: script only</b>\\n",\n'
	+ '                actual: {\n'
	+ '                    0: {\n'
	+ '                        "@JSON_escapeMarker@": "$.expected.0.23.actual.0=undefined"\n'
	+ '                    },\n'
	+ '                    1: {\n'
	+ '                        ignore: "script, constructors",\n'
	+ '                        exclude: "Function"\n'
	+ '                    },\n'
	+ '                    results: ""\n'
	+ '                },\n'
	+ '                expected: {},\n'
	+ '                saveDateTime: "11-19-2016 12:08:17 pm"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            escaped_values: [\n'
	+ '                "$.23.actual.0=undefined"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    \\"test #1 no data\\",\\n    \\"test #2 no data\\",\\n    \\"test #3 no data\\",\\n    \\"test #4 no data\\",\\n    \\"test #5 no data\\",\\n    \\"test #6 no data\\",\\n    \\"test #7 no data\\",\\n    \\"test #8 no data\\",\\n    \\"test #9 no data\\",\\n    \\"test #10 no data\\",\\n    \\"test #11 no data\\",\\n    \\"test #12 no data\\",\\n    \\"test #13 no data\\",\\n    \\"test #14 no data\\",\\n    \\"test #15 no data\\",\\n    \\"test #16 no data\\",\\n    \\"test #17 no data\\",\\n    \\"test #18 no data\\",\\n    \\"test #19 no data\\",\\n    \\"test #20 no data\\",\\n    \\"test #21 no data\\",\\n    \\"test #22 no data\\",\\n    \\"test #23 no data\\",\\n    {\\n        ok: false,\\n        testno: 24,\\n        id: \\"arg1=1st arg (fn):[],arg2=2nd arg (options):[ignore,exclude],2nd arg (options).ignore:script, constructors,2nd arg (options).exclude:Function,note:<b>Function:scriptonly</b>\\",\\n        note: \\"<b>Function: script only</b>\\\\n\\",\\n        actual: {\\n            0: {\\n                \\"@JSON_escapeMarker@\\": \\"$.23.actual.0=undefined\\"\\n            },\\n            1: {\\n                ignore: \\"script, constructors\\",\\n                exclude: \\"Function\\"\\n            },\\n            results: \\"\\"\\n        },\\n        expected: {},\\n        saveDateTime: \\"11-19-2016 12:08:17 pm\\"\\n    }\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:59 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 66,\n'
	+ '    id: "arg1=1st arg (value):,note:<b>testoptions</b>",\n'
	+ '    note: "<b>test options</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n...NA...not changed via setExpected fn...",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:00:59 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 67,\n'
	+ '    id: "arg1=1st arg (value):,arg2=2nd arg (replacer):[basic],2nd arg (replacer).basic:,note:<b>testoptions</b>",\n'
	+ '    note: "<b>test options</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:01:00 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 68,\n'
	+ '    id: "arg1=1st arg (value):,arg2=2nd arg (replacer):[basic,script],2nd arg (replacer).basic:,2nd arg (replacer).script:true,note:<b>testoptions</b>",\n'
	+ '    note: "<b>test options</b>\\n\\n<b>no errors reported</b>\\n1st <em>actual</em> argument set to <cite>clone from json</cite>\\n1st <em>expected</em> argument set to <cite>input Object</cite>\\n2nd actual return argument set to <cite>returned lists</cite>",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by script callback fn:</i>\\n1st arg (value)",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "12-07-2016 09:01:00 am"\n'
	+ '}'
]