EZ.test.savedResults=		//Saved @ 11-28-2016 10:26:23 pm
[
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 1,\n'
	+ '    id: "arg1=1st arg (obj):[a,b],1st arg (obj).a:1,1st arg (obj).b:[x,y],1st arg (obj).b.x:x-ray,1st arg (obj).b.y:99,arg2=2nd arg (keys_quoted):[clone,validate,unquoteKeys,ignore],2nd arg (keys_quoted).clone:keep,2nd arg (keys_quoted).validate:true,2nd arg (keys_quoted).unquoteKeys:false,2nd arg (keys_quoted).ignore:none,note:<b>simplenon-circularJSON.stringify()</b>",\n'
	+ '    note: "<b>simple non-circular JSON.stringify()</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"a\\": 1,\\n    \\"b\\": {\\n        \\"x\\": \\"x-ray\\",\\n        \\"y\\": 99\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"a\\": 1,\\n    \\"b\\": {\\n        \\"x\\": \\"x-ray\\",\\n        \\"y\\": 99\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:00 pm",\n'
	+ '    saveError: "",\n'
	+ '    used: true\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 2,\n'
	+ '    id: "arg1=1st arg (obj):[a,b],1st arg (obj).a:1,1st arg (obj).b:[x,y],1st arg (obj).b.x:x-ray,1st arg (obj).b.y:99,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simplenon-circularJSON.stringify()</b>",\n'
	+ '    note: "<b>simple non-circular JSON.stringify()</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: 1,\\n    b: {\\n        x: \\"x-ray\\",\\n        y: 99\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: 1,\\n    b: {\\n        x: \\"x-ray\\",\\n        y: 99\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:00 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 3,\n'
	+ '    id: "arg1=1st arg (obj):[a,b,c,d],1st arg (obj).a:1,1st arg (obj).b:[x,y],1st arg (obj).b.x:x-ray,1st arg (obj).b.y:99,1st arg (obj).c:[0,1],1st arg (obj).c[0]:1,1st arg (obj).c[1]:cat,1st arg (obj).d:dog,arg2=2nd arg (keys_quoted):[clone,validate,unquoteKeys,ignore],2nd arg (keys_quoted).clone:keep,2nd arg (keys_quoted).validate:true,2nd arg (keys_quoted).unquoteKeys:false,2nd arg (keys_quoted).ignore:none,note:<b>simplenon-circularJSON.stringify()</b>",\n'
	+ '    note: "<b>simple non-circular JSON.stringify()</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            },\n'
	+ '            c: [\n'
	+ '                1,\n'
	+ '                "cat"\n'
	+ '            ],\n'
	+ '            d: "dog"\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"a\\": 1,\\n    \\"b\\": {\\n        \\"x\\": \\"x-ray\\",\\n        \\"y\\": 99\\n    },\\n    \\"c\\": [\\n        1,\\n        \\"cat\\"\\n    ],\\n    \\"d\\": \\"dog\\"\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            },\n'
	+ '            c: [\n'
	+ '                1,\n'
	+ '                "cat"\n'
	+ '            ],\n'
	+ '            d: "dog"\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"a\\": 1,\\n    \\"b\\": {\\n        \\"x\\": \\"x-ray\\",\\n        \\"y\\": 99\\n    },\\n    \\"c\\": [\\n        1,\\n        \\"cat\\"\\n    ],\\n    \\"d\\": \\"dog\\"\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:00 pm",\n'
	+ '    saveError: "",\n'
	+ '    used: true\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 4,\n'
	+ '    id: "arg1=1st arg (obj):[a,b,c,d],1st arg (obj).a:1,1st arg (obj).b:[x,y],1st arg (obj).b.x:x-ray,1st arg (obj).b.y:99,1st arg (obj).c:[0,1],1st arg (obj).c[0]:1,1st arg (obj).c[1]:cat,1st arg (obj).d:dog,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simplenon-circularJSON.stringify()</b>",\n'
	+ '    note: "<b>simple non-circular JSON.stringify()</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            },\n'
	+ '            c: [\n'
	+ '                1,\n'
	+ '                "cat"\n'
	+ '            ],\n'
	+ '            d: "dog"\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: 1,\\n    b: {\\n        x: \\"x-ray\\",\\n        y: 99\\n    },\\n    c: [\\n        1,\\n        \\"cat\\"\\n    ],\\n    d: \\"dog\\"\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                x: "x-ray",\n'
	+ '                y: 99\n'
	+ '            },\n'
	+ '            c: [\n'
	+ '                1,\n'
	+ '                "cat"\n'
	+ '            ],\n'
	+ '            d: "dog"\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: 1,\\n    b: {\\n        x: \\"x-ray\\",\\n        y: 99\\n    },\\n    c: [\\n        1,\\n        \\"cat\\"\\n    ],\\n    d: \\"dog\\"\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:01 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 5,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:abc,1st arg (x).b:[key],1st arg (x).b.key:99,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simplenon-circularJSON.stringify()</b>",\n'
	+ '    note: "<b>simple non-circular JSON.stringify()</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (x) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "abc",\n'
	+ '            b: {\n'
	+ '                key: 99\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: \\"abc\\",\\n    b: {\\n        key: 99\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: "abc",\n'
	+ '            b: {\n'
	+ '                key: 99\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    a: \\"abc\\",\\n    b: {\\n        key: 99\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:01 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 6,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:abc,1st arg (x).b:{1st arg (x)},arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:true,2nd arg (opts).ignore:circular,note:<b>simpleJSON.stringify()circularobjects</b>circularobj[$.b]deleted",\n'
	+ '    note: "<b>simple JSON.stringify() circular objects</b>\\ncircular obj [$.b] deleted\\n1st <em>actual</em> argument set to Object created from json\\n<hr><em>JSON.stringify() messages:</em>\\nJSON.plus.validate() failed\\n1 deleted_value\\n4 validate_details\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<em>Object created from json NOT same as input obj</em>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "abc"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.b]: $.b"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [Object] ... 2nd [Object]",\n'
	+ '                " . *keys do not match*",\n'
	+ '                "  + b:       ... na          ",\n'
	+ '                " . [Object]  !== [Object]    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: \\"abc\\"\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: "abc"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.b]: $.b"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [Object] ... 2nd [Object]",\n'
	+ '                " . *keys do not match*",\n'
	+ '                "  + b:       ... na          ",\n'
	+ '                " . [Object]  !== [Object]    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: \\"abc\\"\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:01 pm"\n'
	+ '}'
,
	'"test #7 invalid json"'
,
	'"test #8 invalid json"'
,
	'"test #9 invalid json"'
,
	'"test #10 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 11,\n'
	+ '    id: "arg1=1st arg (value):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleJSON.stringify()circularobjects</b>",\n'
	+ '    note: "<b>simple JSON.stringify() circular objects</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: [],\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "[]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [],\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "[]"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:03 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 12,\n'
	+ '    id: "arg1=1st arg (value):[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleJSON.stringify()circularobjects</b>",\n'
	+ '    note: "<b>simple JSON.stringify() circular objects</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {},\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {},\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:04 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 13,\n'
	+ '    id: "arg1=1st arg (value):[],1st arg (value)[]:,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleJSON.stringify()circularobjects</b>",\n'
	+ '    note: "<b>simple JSON.stringify() circular objects</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "": ""\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"\\": \\"\\"\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "": ""\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"\\": \\"\\"\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:04 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 14,\n'
	+ '    id: "arg1=1st arg (value):[,x,y,z],1st arg (value)[]:,1st arg (value).x:1,1st arg (value).y:[],1st arg (value).z:[],1st arg (value).z[]:,arg2=2nd arg (x:1):[clone,validate,unquoteKeys,ignore],2nd arg (x:1).clone:keep,2nd arg (x:1).validate:true,2nd arg (x:1).unquoteKeys:true,2nd arg (x:1).ignore:none,note:<b>simpleJSON.stringify()circularobjects</b>",\n'
	+ '    note: "<b>simple JSON.stringify() circular objects</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "": "",\n'
	+ '            x: 1,\n'
	+ '            y: [],\n'
	+ '            z: {\n'
	+ '                "": ""\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"\\": \\"\\",\\n    x: 1,\\n    y: [],\\n    z: {\\n        \\"\\": \\"\\"\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            "": "",\n'
	+ '            x: 1,\n'
	+ '            y: [],\n'
	+ '            z: {\n'
	+ '                "": ""\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    \\"\\": \\"\\",\\n    x: 1,\\n    y: [],\\n    z: {\\n        \\"\\": \\"\\"\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:04 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 15,\n'
	+ '    id: "arg1=1st arg (obj):[n,str,a],1st arg (obj).n:0,1st arg (obj).str:abc,1st arg (obj).a:[0,1,2],1st arg (obj).a[0]:1,1st arg (obj).a[1]:2,1st arg (obj).a[2]:3,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>priorcirculartest</b>notcircular",\n'
	+ '    note: "<b>prior circular test</b>\\nnot circular\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            n: 0,\n'
	+ '            str: "abc",\n'
	+ '            a: [\n'
	+ '                1,\n'
	+ '                2,\n'
	+ '                3\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    n: 0,\\n    str: \\"abc\\",\\n    a: [\\n        1,\\n        2,\\n        3\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            n: 0,\n'
	+ '            str: "abc",\n'
	+ '            a: [\n'
	+ '                1,\n'
	+ '                2,\n'
	+ '                3\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "{\\n    n: 0,\\n    str: \\"abc\\",\\n    a: [\\n        1,\\n        2,\\n        3\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:05 pm"\n'
	+ '}'
,
	'"test #16 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 17,\n'
	+ '    id: "arg1=1st arg (value):[0,1,2,3,4],1st arg (value)[0]:null,1st arg (value)[1]:1,1st arg (value)[2]:null,1st arg (value)[3]:null,1st arg (value)[4]:5,arg2=2nd arg (replacer):[clone,validate,unquoteKeys,ignore],2nd arg (replacer).clone:keep,2nd arg (replacer).validate:true,2nd arg (replacer).unquoteKeys:true,2nd arg (replacer).ignore:none,note:<b>saveResultsscenarios</b>",\n'
	+ '    note: "<b>saveResults scenarios</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            null,\n'
	+ '            1,\n'
	+ '            null,\n'
	+ '            null,\n'
	+ '            5\n'
	+ '        ],\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "[\\n    null,\\n    1,\\n    null,\\n    null,\\n    5\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            null,\n'
	+ '            1,\n'
	+ '            null,\n'
	+ '            null,\n'
	+ '            5\n'
	+ '        ],\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "[\\n    null,\\n    1,\\n    null,\\n    null,\\n    5\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:05 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 18,\n'
	+ '    id: "arg1=1st arg (value):[0,1],1st arg (value)[0]:1,1st arg (value)[1]:null,arg2=2nd arg (null]):[clone,validate,unquoteKeys,ignore],2nd arg (null]).clone:keep,2nd arg (null]).validate:true,2nd arg (null]).unquoteKeys:true,2nd arg (null]).ignore:none,note:<b>saveResultsscenarios</b>",\n'
	+ '    note: "<b>saveResults scenarios</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            null\n'
	+ '        ],\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "[\\n    1,\\n    null\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            null\n'
	+ '        ],\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "[\\n    1,\\n    null\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:06 pm"\n'
	+ '}'
,
	'"test #19 invalid json"'
,
	'"test #20 invalid json"'
,
	'"test #21 invalid json"'
,
	'"test #22 invalid json"'
,
	'"test #23 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 24,\n'
	+ '    id: "arg1=1st arg (value):null,note:<b>simplejson--previouslyhandledw/ocallingstringify:</b>null",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:</b> null\\n<b>no Errors found</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: null,\n'
	+ '        results: "null"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "null"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:08 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 25,\n'
	+ '    id: "arg1=1st arg (value):true,note:<b>simplejson--previouslyhandledw/ocallingstringify:Boolean</b>",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\nBoolean</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: true,\n'
	+ '        results: "true"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "true"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:08 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 26,\n'
	+ '    id: "arg1=1st arg (value):false,note:<b>simplejson--previouslyhandledw/ocallingstringify:Boolean</b>",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\nBoolean</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: false,\n'
	+ '        results: "false"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "false"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:09 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 27,\n'
	+ '    id: "arg1=1st arg (Boolean(true)):true,note:<b>simplejson--previouslyhandledw/ocallingstringify:Boolean</b>",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\nBoolean</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: true,\n'
	+ '        results: "true"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "true"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:09 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 28,\n'
	+ '    id: "arg1=1st arg (Boolean(false)):false,note:<b>simplejson--previouslyhandledw/ocallingstringify:Boolean</b>",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\nBoolean</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: false,\n'
	+ '        results: "false"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "false"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:09 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 29,\n'
	+ '    id: "arg1=1st arg (value):0,note:<b>simplejson--previouslyhandledw/ocallingstringify:Number</b>",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\nNumber</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: 0,\n'
	+ '        results: "0"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "0"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:09 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 30,\n'
	+ '    id: "arg1=1st arg (value):1,note:<b>simplejson--previouslyhandledw/ocallingstringify:Number</b>",\n'
	+ '    note: "<b>simple json -- previously handled w/o calling stringify:\\nNumber</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: 1,\n'
	+ '        results: "1"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "1"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:10 pm"\n'
	+ '}'
,
	'"test #31 invalid json"'
,
	'"test #32 invalid json"'
,
	'"test #33 invalid json"'
,
	'"test #34 invalid json"'
,
	'"test #35 invalid json"'
,
	'"test #36 invalid json"'
,
	'"test #37 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 38,\n'
	+ '    id: "arg1=1st arg (arg):[],arg2=2nd arg (replacer):[ignore,validate,info],2nd arg (replacer).ignore:Date,2nd arg (replacer).validate:true,2nd arg (replacer).info:all,note:<b>standaloneDates</b>",\n'
	+ '    note: "<b>standalone Dates</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n<hr><em>JSON.stringify() messages:</em>\\nJSON.plus.validate() failed\\n1 changed_value\\n2 validate_details\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<em>Object created from json NOT same as input obj</em>\\n<hr>JSON.stringify() info messages: 1 ignored_constructor\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "1970-01-01T00:00:00.000Z",\n'
	+ '        1: {\n'
	+ '            ignored_constructors: [\n'
	+ '                "[$]: Date"\n'
	+ '            ],\n'
	+ '            changed_values: [\n'
	+ '                "[$] [12/31/1969 07:00:00.000 pm]\\n  -->  [\\"1970-01-01T00:00:00.000Z\\"]"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [Date] ... 2nd [String]              ",\n'
	+ '                " .         !== \\"1970-01-01T00:00:00.000Z\\""\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"1970-01-01T00:00:00.000Z\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "1970-01-01T00:00:00.000Z",\n'
	+ '        1: {\n'
	+ '            ignored_constructors: [\n'
	+ '                "[$]: Date"\n'
	+ '            ],\n'
	+ '            changed_values: [\n'
	+ '                "[$] [12/31/1969 07:00:00.000 pm]\\n  -->  [\\"1970-01-01T00:00:00.000Z\\"]"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [Date] ... 2nd [String]              ",\n'
	+ '                " .         !== \\"1970-01-01T00:00:00.000Z\\""\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "\\"1970-01-01T00:00:00.000Z\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:13 pm"\n'
	+ '}'
,
	'"test #39 invalid json"'
,
	'"test #40 invalid json"'
,
	'"test #41 invalid json"'
,
	'"test #42 invalid json"'
,
	'"test #43 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 44,\n'
	+ '    id: "arg1=1st arg (obj):[fn],1st arg (obj).fn:[],arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>Function</b>",\n'
	+ '    note: "<b>Function</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: 1 function;&nbsp; &nbsp;1 deleted_function\\n",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {},\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$.fn]: function cloneTest()"\n'
	+ '            ],\n'
	+ '            deleted_functions: [\n'
	+ '                "[$.fn]: function cloneTest(script only)"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {},\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$.fn]: function cloneTest()"\n'
	+ '            ],\n'
	+ '            deleted_functions: [\n'
	+ '                "[$.fn]: function cloneTest(script only)"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:15 pm"\n'
	+ '}'
,
	'"test #45 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 46,\n'
	+ '    id: "arg1=1st arg (value):,note:<b>simpleStrings</b>emptystring",\n'
	+ '    note: "<b>simple Strings</b>\\nempty string\\n<b>no Errors found</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:16 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 47,\n'
	+ '    id: "arg1=1st arg (value):embedded \\"me\\" double quotes,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleStrings</b>",\n'
	+ '    note: "<b>simple Strings</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: "embedded \\"me\\" double quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded \\\\\\"me\\\\\\" double quotes\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "embedded \\"me\\" double quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded \\\\\\"me\\\\\\" double quotes\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:16 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 48,\n'
	+ '    id: "arg1=1st arg (value):embedded 'me' single quotes,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleStrings</b>",\n'
	+ '    note: "<b>simple Strings</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: "embedded 'me' single quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded 'me' single quotes\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "embedded 'me' single quotes",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"embedded 'me' single quotes\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:16 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 49,\n'
	+ '    id: "arg1=1st arg (value):multi-line \\n line 2,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>simpleStrings</b>",\n'
	+ '    note: "<b>simple Strings</b>\\n\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (value) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: "multi-line \\n line 2",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"multi-line \\\\n line 2\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "multi-line \\n line 2",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"multi-line \\\\n line 2\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:17 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 50,\n'
	+ '    id: "arg1=1st arg (obj):[yes,no],1st arg (obj).yes:true,1st arg (obj).no:false,arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:false,2nd arg (opts).ignore:constructor,arg3=3rd arg (spaces):0,note:<b>EZoptionsObject</b>shouldreportnon-standardconstructor",\n'
	+ '    note: "<b>EZoptions Object</b>\\nshould report non-standard constructor\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<hr><em>JSON.stringify() messages:</em>\\nJSON.plus.validate() failed\\n2 validate_details\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<em>Object created from json NOT same as input obj</em>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj)",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            yes: true,\n'
	+ '            no: false\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            validate_details: [\n'
	+ '                "1st [EZoptions] ... 2nd [Object]",\n'
	+ '                " . [EZoptions]  !== [Object]    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: 0,\n'
	+ '        results: "{\\"yes\\":true,\\"no\\":false}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            yes: true,\n'
	+ '            no: false\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            validate_details: [\n'
	+ '                "1st [EZoptions] ... 2nd [Object]",\n'
	+ '                " . [EZoptions]  !== [Object]    "\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\"yes\\":true,\\"no\\":false}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:17 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 51,\n'
	+ '    id: "arg1=1st arg (obj):[a],1st arg (obj).a:abc,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>functions:</b>fnhasStringproperty",\n'
	+ '    note: "<b>functions:</b> fn has String property\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: 1 function;&nbsp; &nbsp;1 ignored_constructor;&nbsp; &nbsp;1 escaped_value\\n",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "abc"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$]: function obj()"\n'
	+ '            ],\n'
	+ '            ignored_constructors: [\n'
	+ '                "[$.a]: String"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "[object Object]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: \\"abc\\"\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: "abc"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$]: function obj()"\n'
	+ '            ],\n'
	+ '            ignored_constructors: [\n'
	+ '                "[$.a]: String"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "[object Object]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: \\"abc\\"\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:17 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 52,\n'
	+ '    id: "arg1=1st arg (obj):[a],1st arg (obj).a:[yes,no],1st arg (obj).a.yes:true,1st arg (obj).a.no:false,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>functions:</b>fnhasObjectproperty",\n'
	+ '    note: "<b>functions:</b> fn has Object property\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: 1 function;&nbsp; &nbsp;1 escaped_value\\n",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$]: function obj()"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "[object Object]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$]: function obj()"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "[object Object]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:18 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 53,\n'
	+ '    id: "arg1=1st arg (obj):[a],1st arg (obj).a:[yes,no],1st arg (obj).a.yes:true,1st arg (obj).a.no:false,arg2=2nd arg (plusOpts):[clone,validate,unquoteKeys,ignore],2nd arg (plusOpts).clone:keep,2nd arg (plusOpts).validate:true,2nd arg (plusOpts).unquoteKeys:true,2nd arg (plusOpts).ignore:none,note:<b>functions:</b>fnhasEZoptionsproperty",\n'
	+ '    note: "<b>functions:</b> fn has EZoptions property\\n1st <em>actual</em> argument set to Object created from json\\n1st <em>expected</em> argument set to input obj\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: 1 function;&nbsp; &nbsp;1 ignored_constructor;&nbsp; &nbsp;1 escaped_value\\n",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n1st arg (obj) \\n\\"return value\\" ",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$]: function obj()"\n'
	+ '            ],\n'
	+ '            ignored_constructors: [\n'
	+ '                "[$.a]: EZoptions"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "[object Object]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            a: {\n'
	+ '                yes: true,\n'
	+ '                no: false\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            functions: [\n'
	+ '                "[$]: function obj()"\n'
	+ '            ],\n'
	+ '            ignored_constructors: [\n'
	+ '                "[$.a]: EZoptions"\n'
	+ '            ],\n'
	+ '            escaped_values: [\n'
	+ '                "[object Object]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    a: {\\n        yes: true,\\n        no: false\\n    }\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:18 pm"\n'
	+ '}'
,
	'"test #54 invalid json"'
,
	'"test #55 invalid json"'
,
	'"test #56 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 57,\n'
	+ '    id: "arg1=1st arg (actual):[0,1],1st arg (actual)[0]:[0,more],1st arg (actual)[0][0]:8,1st arg (actual)[0].more:abc,1st arg (actual)[1]:[0,more,colors],1st arg (actual)[1][0]:9,1st arg (actual)[1].more:xyz,1st arg (actual)[1].colors:[0,1],1st arg (actual)[1].colors[0]:red,1st arg (actual)[1].colors[1]:blue,arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:false,2nd arg (opts).ignore:Array,note:<b>Arraynamedproperties</b>ignoreArraynamedproperties--sameasJSON.stringify",\n'
	+ '    note: "<b>Array named properties</b>\\nignore Array named properties -- same as JSON.stringify\\n1st <em>actual</em> argument set to Object created from json\\n<hr><em>JSON.stringify() messages:</em>\\nJSON.plus.validate() failed\\n2 deleted_values\\n8 validate_details\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<em>Object created from json NOT same as input obj</em>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                8\n'
	+ '            ],\n'
	+ '            [\n'
	+ '                9\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [ObjectLike] ... 2nd [Array] ",\n'
	+ '                "[0] *keys do not match*",\n'
	+ '                "  + more:        ... na          ",\n'
	+ '                "[0] [ObjectLike] !== [ObjectLike]",\n'
	+ '                "[1] *keys do not match*",\n'
	+ '                "  + more:        ... na          ",\n'
	+ '                "  + colors:      ... na          ",\n'
	+ '                "[1] [ObjectLike] !== [ObjectLike]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        8\\n    ],\\n    [\\n        9\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: [\n'
	+ '            [\n'
	+ '                8\n'
	+ '            ],\n'
	+ '            [\n'
	+ '                9\n'
	+ '            ]\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [ObjectLike] ... 2nd [Array] ",\n'
	+ '                "[0] *keys do not match*",\n'
	+ '                "  + more:        ... na          ",\n'
	+ '                "[0] [ObjectLike] !== [ObjectLike]",\n'
	+ '                "[1] *keys do not match*",\n'
	+ '                "  + more:        ... na          ",\n'
	+ '                "  + colors:      ... na          ",\n'
	+ '                "[1] [ObjectLike] !== [ObjectLike]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "[\\n    [\\n        8\\n    ],\\n    [\\n        9\\n    ]\\n]"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:20 pm"\n'
	+ '}'
,
	'"test #58 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 59,\n'
	+ '    id: "arg1=1st arg (obj):[actual],1st arg (obj).actual:[0,1],1st arg (obj).actual[0]:[0,more],1st arg (obj).actual[0][0]:8,1st arg (obj).actual[0].more:abc,1st arg (obj).actual[1]:[0,more,colors],1st arg (obj).actual[1][0]:9,1st arg (obj).actual[1].more:xyz,1st arg (obj).actual[1].colors:[0,1],1st arg (obj).actual[1].colors[0]:red,1st arg (obj).actual[1].colors[1]:blue,arg2=2nd arg (opts):[clone,validate,unquoteKeys,ignore],2nd arg (opts).clone:keep,2nd arg (opts).validate:true,2nd arg (opts).unquoteKeys:false,2nd arg (opts).ignore:Array,note:<b>Arraynamedproperties</b>ignoreArraynamedproperties--sameasJSON.stringify",\n'
	+ '    note: "<b>Array named properties</b>\\nignore Array named properties -- same as JSON.stringify\\n1st <em>actual</em> argument set to Object created from json\\n<hr><em>JSON.stringify() messages:</em>\\nJSON.plus.validate() failed\\n2 deleted_values\\n8 validate_details\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<em>Object created from json NOT same as input obj</em>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            actual: [\n'
	+ '                [\n'
	+ '                    8\n'
	+ '                ],\n'
	+ '                [\n'
	+ '                    9\n'
	+ '                ]\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.actual.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.actual.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [Object]             ... 2nd [Object]",\n'
	+ '                " .actual[0] *keys do not match*",\n'
	+ '                "  + more:                ... na          ",\n'
	+ '                " .actual[0] [ObjectLike] !== [ObjectLike]",\n'
	+ '                " .actual[1] *keys do not match*",\n'
	+ '                "  + more:                ... na          ",\n'
	+ '                "  + colors:              ... na          ",\n'
	+ '                " .actual[1] [ObjectLike] !== [ObjectLike]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    \\"actual\\": [\\n        [\\n            8\\n        ],\\n        [\\n            9\\n        ]\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: {\n'
	+ '            actual: [\n'
	+ '                [\n'
	+ '                    8\n'
	+ '                ],\n'
	+ '                [\n'
	+ '                    9\n'
	+ '                ]\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            deleted_values: [\n'
	+ '                "[$.actual.0]: Array named properties:\\n{\\n    \\"more\\": \\"abc\\"\\n}",\n'
	+ '                "[$.actual.1]: Array named properties:\\n{\\n    \\"more\\": \\"xyz\\",\\n    \\"colors\\": [\\n        \\"red\\",\\n        \\"blue\\"\\n    ]\\n}"\n'
	+ '            ],\n'
	+ '            validate_details: [\n'
	+ '                "1st [Object]             ... 2nd [Object]",\n'
	+ '                " .actual[0] *keys do not match*",\n'
	+ '                "  + more:                ... na          ",\n'
	+ '                " .actual[0] [ObjectLike] !== [ObjectLike]",\n'
	+ '                " .actual[1] *keys do not match*",\n'
	+ '                "  + more:                ... na          ",\n'
	+ '                "  + colors:              ... na          ",\n'
	+ '                " .actual[1] [ObjectLike] !== [ObjectLike]"\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        results: "{\\n    \\"actual\\": [\\n        [\\n            8\\n        ],\\n        [\\n            9\\n        ]\\n    ]\\n}"\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:21 pm"\n'
	+ '}'
,
	'"test #60 invalid json"'
,
	'"test #61 invalid json"'
,
	'"test #62 invalid json"'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 63,\n'
	+ '    id: "arg1=1st arg (value):,note:<b>testoptions</b>",\n'
	+ '    note: "<b>test options</b>\\n\\n<b>no Errors found</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n...NA...not changed via setExpected fn...",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        0: "",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:22 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 64,\n'
	+ '    id: "arg1=1st arg (value):,arg2=2nd arg (replacer):[basic],2nd arg (replacer).basic:,note:<b>testoptions</b>",\n'
	+ '    note: "<b>test options</b>\\n\\n<b>no Errors found\\nexpected <cite>return value</cite> set to actual return value</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "<img src=\\"../images/fn_16.png\\"><i>expected values changed by test script fn:</i>\\n\\"return value\\"",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:22 pm"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 65,\n'
	+ '    id: "arg1=1st arg (value):,arg2=2nd arg (replacer):[basic,script],2nd arg (replacer).basic:,2nd arg (replacer).script:true,note:<b>testoptions</b>",\n'
	+ '    note: "<b>test options</b>\\n\\n<b>no Errors found</b>\\n2nd actual return argument set to <cite>returned lists</cite>\\n<em>test script set expected value for </em><cite>returned lists</cite>\\n<hr>JSON.stringify() info messages: none",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "",\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        1: "no returned lists",\n'
	+ '        results: "\\"\\""\n'
	+ '    },\n'
	+ '    saveDateTime: "11-28-2016 10:26:23 pm"\n'
	+ '}'
]