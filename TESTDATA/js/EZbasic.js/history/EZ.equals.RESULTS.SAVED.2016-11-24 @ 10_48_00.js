EZ.test.savedResults=		//Saved @ 11-24-2016 10:48:00 am
[
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 1,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (y):[a,b],2nd arg (y).a:0,2nd arg (y).b:,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>showDifftests:</b>easytest",\n'
	+ '    note: "<b>showDiff tests:</b> easy test\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 0,\n'
	+ '            b: ""\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .a: 1 \\t !== 0",\n'
	+ '            "  .b: 2 \\t !== •empty string•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .a: 1 \\t !== 0",\n'
	+ '            "  .b: 2 \\t !== •empty string•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:23 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 2,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (y):[a,b],2nd arg (y).a:0,2nd arg (y).b:,arg3=3rd arg (options):[showDiff,neq],3rd arg (options).showDiff:true,3rd arg (options).neq:is not,note:<b>showDifftests:</b>easytestoptions.neq=\\"not\\"",\n'
	+ '    note: "<b>showDiff tests:</b> easy test options.neq = \\"not\\"\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 0,\n'
	+ '            b: ""\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ...... 2nd [Object]",\n'
	+ '            "  .a: 1 \\t is not 0",\n'
	+ '            "  .b: 2 \\t is not •empty string•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ...... 2nd [Object]",\n'
	+ '            "  .a: 1 \\t is not 0",\n'
	+ '            "  .b: 2 \\t is not •empty string•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:24 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 3,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (y):[a,b],2nd arg (y).a:0,2nd arg (y).b:,arg3=3rd arg (options):[],note:<b>showDifftests:</b>noshowDiffoption",\n'
	+ '    note: "<b>showDiff tests:</b> no showDiff option\\nshowDiff not specified",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 0,\n'
	+ '            b: ""\n'
	+ '        },\n'
	+ '        2: {},\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:24 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 4,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (y):[a,b],2nd arg (y).a:0,2nd arg (y).b:,note:<b>showDifftests:</b>nortnValue",\n'
	+ '    note: "<b>showDiff tests:</b> no rtnValue\\nshowDiff not specified",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 0,\n'
	+ '            b: ""\n'
	+ '        },\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:24 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 5,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (y):[a,b],2nd arg (y).a:0,2nd arg (y).b:,arg3=3rd arg (options):6,note:<b>showDifftests:</b>showDifftrueforNumberbutnortnValue",\n'
	+ '    note: "<b>showDiff tests:</b> showDiff true for Number but no rtnValue\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 0,\n'
	+ '            b: ""\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .a: 1 \\t !== 0",\n'
	+ '            "  .b: 2 \\t !== •empty string•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .a: 1 \\t !== 0",\n'
	+ '            "  .b: 2 \\t !== •empty string•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:25 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 6,\n'
	+ '    id: "arg1=1st arg (x):[numbers],1st arg (x).numbers:[0,1],1st arg (x).numbers[0]:0,1st arg (x).numbers[1]:1,arg2=2nd arg (y):[numbers],2nd arg (y).numbers:[0],2nd arg (y).numbers[0]:0,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>showDifftests:</b>diffarraylength",\n'
	+ '    note: "<b>showDiff tests:</b> diff array length\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            numbers: [\n'
	+ '                0,\n'
	+ '                1\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            numbers: [\n'
	+ '                0\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .numbers *keys do not match*",\n'
	+ '            "   +{1:} \\t ... na",\n'
	+ '            "  .numbers: [ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .numbers *keys do not match*",\n'
	+ '            "   +{1:} \\t ... na",\n'
	+ '            "  .numbers: [ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:25 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 7,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0],2nd arg (y)[0]:0,arg3=3rd arg (options):[showDiff],3rd arg (options).showDiff:true,note:<b>showDifftests:</b>diffarraylength",\n'
	+ '    note: "<b>showDiff tests:</b> diff array length\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{1:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{1:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:25 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 8,\n'
	+ '    id: "arg1=1st arg (x):[a,b,c],1st arg (x).a:[0],1st arg (x).a[0]:0,1st arg (x).b:2,1st arg (x).c:false,arg2=2nd arg (y):[b,c,a],2nd arg (y).b:2,2nd arg (y).c:false,2nd arg (y).a:[0],2nd arg (y).a[0]:0,arg3=3rd arg (options):[showDiff,keys],3rd arg (options).showDiff:true,3rd arg (options).keys:sameorder,note:<b>showDifftests:</b>keysnotinsameorder",\n'
	+ '    note: "<b>showDiff tests:</b> keys not in same order\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: [\n'
	+ '                0\n'
	+ '            ],\n'
	+ '            b: 2,\n'
	+ '            c: false\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            b: 2,\n'
	+ '            c: false,\n'
	+ '            a: [\n'
	+ '                0\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "   *keys diff order*",\n'
	+ '            "   {a:} \\t ... {b:}",\n'
	+ '            "   {b:} \\t ... {c:}",\n'
	+ '            "   {c:} \\t ... {a:}",\n'
	+ '            "[Object] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "   *keys diff order*",\n'
	+ '            "   {a:} \\t ... {b:}",\n'
	+ '            "   {b:} \\t ... {c:}",\n'
	+ '            "   {c:} \\t ... {a:}",\n'
	+ '            "[Object] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:26 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 9,\n'
	+ '    id: "arg1=1st arg (x):[b,c,a],1st arg (x).b:2,1st arg (x).c:\\r,1st arg (x).a:[0],1st arg (x).a[0]:0,arg2=2nd arg (y):[b,c,d,a,],2nd arg (y).b:2,2nd arg (y).c:false,2nd arg (y).d:4,2nd arg (y).a:[0],2nd arg (y).a[0]:0,2nd arg (y)[]:,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>showDifftests:</b>",\n'
	+ '    note: "<b>showDiff tests:</b> \\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            b: 2,\n'
	+ '            c: "\\r",\n'
	+ '            a: [\n'
	+ '                0\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            b: "2",\n'
	+ '            c: false,\n'
	+ '            d: 4,\n'
	+ '            a: [\n'
	+ '                0\n'
	+ '            ],\n'
	+ '            "": ""\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{d:}",\n'
	+ '            "   na \\t ... +{\\"\\":}",\n'
	+ '            "[Object] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{d:}",\n'
	+ '            "   na \\t ... +{\\"\\":}",\n'
	+ '            "[Object] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:26 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 10,\n'
	+ '    id: "arg1=1st arg (x):[o],1st arg (x).o:{},arg2=2nd arg (y):[o],2nd arg (y).o:[],arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>showDifftests:</b>",\n'
	+ '    note: "<b>showDiff tests:</b> \\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            o: "{}"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            o: {}\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .o: \\"{}\\" \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .o: \\"{}\\" \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:27 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 11,\n'
	+ '    id: "arg1=1st arg (x):[1,,a,b,aa],1st arg (x)[1]:1,1st arg (x)[]:1,1st arg (x).a:1,1st arg (x).b:2,1st arg (x).aa:[0,1],1st arg (x).aa[0]:0,1st arg (x).aa[1]:1,arg2=2nd arg (y):[0,1,b,c,aa],2nd arg (y)[0]:1,2nd arg (y)[1]:1,2nd arg (y).b:2,2nd arg (y).c:3,2nd arg (y).aa:[0],2nd arg (y).aa[0]:0,arg3=3rd arg (options):true,note:<b>showDifftests:</b>",\n'
	+ '    note: "<b>showDiff tests:</b> \\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            1: 1,\n'
	+ '            "": 1,\n'
	+ '            a: 1,\n'
	+ '            b: 2,\n'
	+ '            aa: [\n'
	+ '                0,\n'
	+ '                1\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            0: 1,\n'
	+ '            1: 1,\n'
	+ '            b: 2,\n'
	+ '            c: 3,\n'
	+ '            aa: [\n'
	+ '                0\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{\\"\\":} \\t ... +{0:}",\n'
	+ '            "   +{a:} \\t ... +{c:}",\n'
	+ '            "[Object] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{\\"\\":} \\t ... +{0:}",\n'
	+ '            "   +{a:} \\t ... +{c:}",\n'
	+ '            "[Object] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:27 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 12,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:{1st arg (x)},arg2=2nd arg (y):[a,b],2nd arg (y).a:1,2nd arg (y).b:{2nd arg (y)},note:<b>CircularObjects:</b>simple",\n'
	+ '    note: "<b>Circular Objects:</b> simple",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.b=$.actual.0"\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 1,\n'
	+ '            b: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.1.b=$.actual.1"\n'
	+ '            }\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:28 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 13,\n'
	+ '    id: "arg1=1st arg (x):[2,11,b,a],1st arg (x)[2]:1st,1st arg (x)[11]:2nd,1st arg (x).b:4th,1st arg (x).a:3rd,arg2=2nd arg (y):[2,11,a,b],2nd arg (y)[2]:1st,2nd arg (y)[11]:2nd,2nd arg (y).a:3rd,2nd arg (y).b:4th,arg3=3rd arg (options):[showDiff,console],3rd arg (options).showDiff:true,3rd arg (options).console:true,note:<b>CustomObject:EZoptions-->Object:</b>diffconstructor--NOTingored",\n'
	+ '    note: "<b>Custom Object: EZoptions --> Object:</b> diff constructor -- NOT ingored\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            2: "1st",\n'
	+ '            11: "2nd",\n'
	+ '            b: "4th",\n'
	+ '            a: "3rd"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            2: "1st",\n'
	+ '            11: "2nd",\n'
	+ '            a: "3rd",\n'
	+ '            b: "4th"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [EZoptions] \\t ... 2nd [Object]",\n'
	+ '            "[EZoptions] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [EZoptions] \\t ... 2nd [Object]",\n'
	+ '            "[EZoptions] \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:28 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 14,\n'
	+ '    id: "arg1=1st arg (x):[2,11,b,a],1st arg (x)[2]:1st,1st arg (x)[11]:2nd,1st arg (x).b:4th,1st arg (x).a:3rd,arg2=2nd arg (y):[2,11,a,b],2nd arg (y)[2]:1st,2nd arg (y)[11]:2nd,2nd arg (y).a:3rd,2nd arg (y).b:4th,arg3=3rd arg (options):[showDiff,console,ignore],3rd arg (options).showDiff:true,3rd arg (options).console:true,3rd arg (options).ignore:objectType,note:<b>CustomObject:EZoptions-->Object:</b>diffconstructor--butingored",\n'
	+ '    note: "<b>Custom Object: EZoptions --> Object:</b> diff constructor -- but ingored",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            2: "1st",\n'
	+ '            11: "2nd",\n'
	+ '            b: "4th",\n'
	+ '            a: "3rd"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            2: "1st",\n'
	+ '            11: "2nd",\n'
	+ '            a: "3rd",\n'
	+ '            b: "4th"\n'
	+ '        },\n'
	+ '        2: {\n'
	+ '            showDiff: true,\n'
	+ '            console: true,\n'
	+ '            ignore: "objectType"\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:28 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 15,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0,1,length],2nd arg (y)[0]:0,2nd arg (y)[1]:1,2nd arg (y).length:2,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>xisarray--yisArrayLike--samekeysandvalues",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x is array -- y is ArrayLike -- same keys and values\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            0: 0,\n'
	+ '            1: 1,\n'
	+ '            length: 2\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Object]",\n'
	+ '            " \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Object]",\n'
	+ '            " \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:29 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 16,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:0,2nd arg (y)[1]:1,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ybothsameArray",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y both same Array",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:29 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 17,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:0,2nd arg (y)[1]:1,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ydiffArrayswithsameindexes&values",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y diff Arrays with same indexes & values",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:29 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 18,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:0,2nd arg (y)[1]:999,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ydiffArrayswithsameindexesbutdiffvalues",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y diff Arrays with same indexes but diff values\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            999\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [1]: 1 \\t !== 999"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [1]: 1 \\t !== 999"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:30 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 19,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0],2nd arg (y)[0]:0,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ydiffArrayswithdiffindexes",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y diff Arrays with diff indexes\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{1:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{1:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:30 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 20,\n'
	+ '    id: "arg1=1st arg (x):[0,1,extra],1st arg (x)[0]:0,1st arg (x)[1]:1,1st arg (x).extra:xyz,arg2=2nd arg (y):[0,1,extra],2nd arg (y)[0]:0,2nd arg (y)[1]:1,2nd arg (y).extra:xyz,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ydiffArrayswithnamedkeyofextrawithsamevalue",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y diff Arrays with named key of extra with same value",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0",\n'
	+ '                extra: "xyz"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.1",\n'
	+ '                extra: "xyz"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:30 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 21,\n'
	+ '    id: "arg1=1st arg (x):[0,1,extra],1st arg (x)[0]:0,1st arg (x)[1]:1,1st arg (x).extra:abc,arg2=2nd arg (y):[0,1,extra],2nd arg (y)[0]:0,2nd arg (y)[1]:1,2nd arg (y).extra:xyz,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ydiffArrayswithnamedkeyofextrawithdiffvalue",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y diff Arrays with named key of extra with diff value\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0",\n'
	+ '                extra: "abc"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.1",\n'
	+ '                extra: "xyz"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  .extra: \\"abc\\" \\t !== \\"xyz\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  .extra: \\"abc\\" \\t !== \\"xyz\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:31 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 22,\n'
	+ '    id: "arg1=1st arg (x):[0,1,extra],1st arg (x)[0]:0,1st arg (x)[1]:1,1st arg (x).extra:abc,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:0,2nd arg (y)[1]:1,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ysaveArrayvalues--x.extra=\\"abc\\"ydoesnothaveextra",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y save Array values -- x.extra=\\"abc\\" y does not have extra\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0",\n'
	+ '                extra: "abc"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{extra:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{extra:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:31 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 23,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:0,1st arg (x)[1]:1,arg2=2nd arg (y):[0,1,extra],2nd arg (y)[0]:0,2nd arg (y)[1]:1,2nd arg (y).extra:xyz,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>x&ysaveArrayvalues--xdoesnothaveextray.extra=\\"xyz\\"",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> x & y save Array values -- x does not have extra y.extra=\\"xyz\\"\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            0,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            0,\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.1",\n'
	+ '                extra: "xyz"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{extra:}",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{extra:}",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:32 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 24,\n'
	+ '    id: "arg1=1st arg (x):[argsOk,obj,o,used],1st arg (x).argsOk:true,1st arg (x).obj:[a,b],1st arg (x).obj.a:1,1st arg (x).obj.b:2,1st arg (x).o:{1st arg (x).obj},1st arg (x).used:true,arg2=2nd arg (y):[argsOk,obj,o,used],2nd arg (y).argsOk:true,2nd arg (y).obj:[a,b],2nd arg (y).obj.a:1,2nd arg (y).obj.b:2,2nd arg (y).o:[a,b],2nd arg (y).o.a:1,2nd arg (y).o.b:2,2nd arg (y).used:true,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>diffobjbutsamekeysandvaluesx.o&x.objissameobj--x.obj&y.objsameobject",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> diff obj but same keys and values\\nx.o & x.obj is same obj -- x.obj & y.obj same object",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            argsOk: true,\n'
	+ '            obj: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            },\n'
	+ '            o: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.o=$.actual.0.obj"\n'
	+ '            },\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            argsOk: true,\n'
	+ '            obj: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            },\n'
	+ '            o: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            },\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:32 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 25,\n'
	+ '    id: "arg1=1st arg (x):[obj],1st arg (x).obj:[a,b],1st arg (x).obj.a:1,1st arg (x).obj.b:2,arg2=2nd arg (y):[obj],2nd arg (y).obj:[0,1],2nd arg (y).obj[0]:1,2nd arg (y).obj[1]:2,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>diffobj--samesinglekey--butx.obj/y.objnotsametype",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> diff obj -- same single key -- but x.obj / y.obj not same type\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            obj: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            obj: [\n'
	+ '                1,\n'
	+ '                2\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: [Object] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: [Object] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:32 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 26,\n'
	+ '    id: "arg1=1st arg (x):[obj],1st arg (x).obj:[a,b],1st arg (x).obj.a:1,1st arg (x).obj.b:2,arg2=2nd arg (y):[obj],2nd arg (y).obj:true,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>diffobj--samesinglekey--x.objisboolean,y.objisobj",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> diff obj -- same single key -- x.obj is boolean,  y.obj is obj\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            obj: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            obj: true\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: [Object] \\t !== •true•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: [Object] \\t !== •true•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:33 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 27,\n'
	+ '    id: "arg1=1st arg (x):[obj],1st arg (x).obj:false,arg2=2nd arg (y):[obj],2nd arg (y).obj:[a,b],2nd arg (y).obj.a:1,2nd arg (y).obj.b:2,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>diffobj--samesinglekey--x.objisobj,y.objisboolean",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> diff obj -- same single key -- x.obj is obj,  y.obj is boolean\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            obj: false\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            obj: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            }\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: •false• \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: •false• \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:33 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 28,\n'
	+ '    id: "arg1=1st arg (x):[obj],1st arg (x).obj:[a,b],1st arg (x).obj.a:1,1st arg (x).obj.b:2,arg2=2nd arg (y):[obj],2nd arg (y).obj:[0,1],2nd arg (y).obj[0]:1,2nd arg (y).obj[1]:2,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>diffobj--samesinglekey&values--butx.objisArrayLike,y.objisArray",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> diff obj -- same single key & values --but  x.obj is ArrayLike,  y.obj is Array\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            obj: {\n'
	+ '                a: 1,\n'
	+ '                b: 2\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            obj: [\n'
	+ '                1,\n'
	+ '                2\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: [Object] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .obj: [Object] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:34 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 29,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:undefined,arg2=2nd arg (undefined]):[0,1],2nd arg (undefined])[0]:1,2nd arg (undefined])[1]:null,arg3=3rd arg (options):[showDiff],3rd arg (options).showDiff:true,note:<b>testArrayLike/ObjectLike:</b>formattedLogincorrect",\n'
	+ '    note: "<b>test ArrayLike / ObjectLike:</b> formattedLog incorrect\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.1=undefined"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            1,\n'
	+ '            null\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [1]: •undefined• \\t !== •null•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [1]: •undefined• \\t !== •null•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:34 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 30,\n'
	+ '    id: "arg1=1st arg (x):null,arg2=2nd arg (y):null,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: null,\n'
	+ '        1: null,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:35 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 31,\n'
	+ '    id: "arg1=1st arg (x):null,arg2=2nd arg (y):undefined,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: null,\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=undefined"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Null] \\t ... 2nd [undefined]",\n'
	+ '            "•null• \\t !== •undefined•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Null] \\t ... 2nd [undefined]",\n'
	+ '            "•null• \\t !== •undefined•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:35 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 32,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):[],note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=/abc/;"\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:35 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 33,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=/123/;"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [RegExp] \\t ... 2nd [RegExp]",\n'
	+ '            "// \\t !== //"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [RegExp] \\t ... 2nd [RegExp]",\n'
	+ '            "// \\t !== //"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:36 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 34,\n'
	+ '    id: "arg1=1st arg (r):[],arg2=2nd arg (y):[],note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/g;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=/abc/g;"\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:36 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 35,\n'
	+ '    id: "arg1=1st arg (r):[],arg2=2nd arg (y):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/g;"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=/abc/;"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [RegExp] \\t ... 2nd [RegExp]",\n'
	+ '            "// \\t !== //"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [RegExp] \\t ... 2nd [RegExp]",\n'
	+ '            "// \\t !== //"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:36 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 36,\n'
	+ '    id: "arg1=1st arg (r):[],arg2=2nd arg (y):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=/abc/g;#.lastIndex=2"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=/abc/g;"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [RegExp] \\t ... 2nd [RegExp]",\n'
	+ '            "// \\t !== //"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [RegExp] \\t ... 2nd [RegExp]",\n'
	+ '            "// \\t !== //"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:37 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 37,\n'
	+ '    id: "arg1=1st arg (x):hi,arg2=2nd arg (y):hi,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "hi",\n'
	+ '        1: "hi",\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:37 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 38,\n'
	+ '    id: "arg1=1st arg (x):hi,arg2=2nd arg (y):hi ,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: "hi",\n'
	+ '        1: "hi ",\n'
	+ '        2: [\n'
	+ '            "1st [String] \\t ... 2nd [String]",\n'
	+ '            "\\"h\\" \\t !== \\"h\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [String] \\t ... 2nd [String]",\n'
	+ '            "\\"h\\" \\t !== \\"h\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:37 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 39,\n'
	+ '    id: "arg1=1st arg (x):5,arg2=2nd arg (y):5,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: 5,\n'
	+ '        1: 5,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:38 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 40,\n'
	+ '    id: "arg1=1st arg (x):5,arg2=2nd arg (y):10,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: 5,\n'
	+ '        1: 10,\n'
	+ '        2: [\n'
	+ '            "1st [Number] \\t ... 2nd [Number]",\n'
	+ '            "5 \\t !== #"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Number] \\t ... 2nd [Number]",\n'
	+ '            "5 \\t !== #"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:38 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 41,\n'
	+ '    id: "arg1=1st arg (Number(5)):5,arg2=2nd arg (y):5,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: 5,\n'
	+ '        1: 5,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:39 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 42,\n'
	+ '    id: "arg1=1st arg (Number(5)):5,arg2=2nd arg (y):10,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: 5,\n'
	+ '        1: 10,\n'
	+ '        2: [\n'
	+ '            "1st [Number] \\t ... 2nd [Number]",\n'
	+ '            "5 \\t !== #"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Number] \\t ... 2nd [Number]",\n'
	+ '            "5 \\t !== #"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:39 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 43,\n'
	+ '    id: "arg1=1st arg (Number(1)):1,arg2=2nd arg (y):1,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: 1,\n'
	+ '        1: "1",\n'
	+ '        2: [\n'
	+ '            "1st [Number] \\t ... 2nd [String]",\n'
	+ '            "1 \\t !== \\"1\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Number] \\t ... 2nd [String]",\n'
	+ '            "1 \\t !== \\"1\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:39 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 44,\n'
	+ '    id: "arg1=1st arg (x):true,arg2=2nd arg (y):true,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: true,\n'
	+ '        1: true,\n'
	+ '        2: true,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:40 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 45,\n'
	+ '    id: "arg1=1st arg (x):true,arg2=2nd arg (y):false,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: true,\n'
	+ '        1: false,\n'
	+ '        2: [\n'
	+ '            "1st [Boolean] \\t ... 2nd [Boolean]",\n'
	+ '            "•true• \\t !== •false•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Boolean] \\t ... 2nd [Boolean]",\n'
	+ '            "•true• \\t !== •false•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:40 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 46,\n'
	+ '    id: "arg1=1st arg (Boolean(true)):true,arg2=2nd arg (y):true,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>EZ.equals(Boolean(true),true,true)callargsnotdisplayedcorrectly",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\nEZ.equals(Boolean(true),true, true)\\ncall args not displayed correctly",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: true,\n'
	+ '        1: true,\n'
	+ '        2: true,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:41 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 47,\n'
	+ '    id: "arg1=1st arg (Boolean(true)):true,arg2=2nd arg (y):false,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>EZ.equals(Boolean(true),true,true)callargsnotdisplayedcorrectly",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\nEZ.equals(Boolean(true),true, true)\\ncall args not displayed correctly\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: true,\n'
	+ '        1: false,\n'
	+ '        2: [\n'
	+ '            "1st [Boolean] \\t ... 2nd [Boolean]",\n'
	+ '            "•true• \\t !== •false•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Boolean] \\t ... 2nd [Boolean]",\n'
	+ '            "•true• \\t !== •false•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:41 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 48,\n'
	+ '    id: "arg1=1st arg (d1):[],arg2=2nd arg (d2):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('03/31/2016 08:00:00.000 am')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('03/31/2016 08:00:00.010 am')"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "#date \\t !== #date"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "#date \\t !== #date"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:41 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 49,\n'
	+ '    id: "arg1=1st arg (d1):[],arg2=2nd arg (new Date(###2016/03/31 8:00:10 pm###)):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('03/31/2016 08:00:00.000 am')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('03/31/2016 08:00:10.000 pm')"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "#date \\t !== #date"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "#date \\t !== #date"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:42 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 50,\n'
	+ '    id: "arg1=1st arg (new Date(###2011/03/31###)):[],arg2=2nd arg (new Date(###2011/03/31###)):[],note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('03/31/2011')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('03/31/2011')"\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:42 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 51,\n'
	+ '    id: "arg1=1st arg (new Date(###2011/03/31###)):[],arg2=2nd arg (new Date(######)):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('03/31/2011')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('''')"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "#date \\t !== Invalid Date"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "#date \\t !== Invalid Date"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:42 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 52,\n'
	+ '    id: "arg1=1st arg (new Date(x)):[],arg2=2nd arg (new Date(y)):[],arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testsfromstackoverflowbasecode</b>03/14/20161:00pmEST03/14/201606:00pmGMT",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n03/14/2016 1:00 pm EST\\n03/14/2016 06:00 pm GMT",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('03/14/2016 02:00:00.000 pm')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('03/14/2016 02:00:00.000 pm')"\n'
	+ '        },\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:43 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 53,\n'
	+ '    id: "arg1=1st arg (new Date(x)):[],arg2=2nd arg (new Date(y)):[],arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>testsfromstackoverflowbasecode</b>03/14/20161:00:01pmEST03/14/201606:00pmGMT",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n03/14/2016 1:00:01 pm EST\\n03/14/2016 06:00 pm GMT\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('03/14/2016 02:00:01.000 pm')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('03/14/2016 02:00:00.000 pm')"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "03-14-2016 02:00:01 PM \\t !== 03-14-2016 02:00 PM"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Date]",\n'
	+ '            "03-14-2016 02:00:01 PM \\t !== 03-14-2016 02:00 PM"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:43 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 54,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [],\n'
	+ '        1: [],\n'
	+ '        2: true,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:44 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 55,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:2,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:1,2nd arg (y)[1]:2,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:44 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 56,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:2,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:2,2nd arg (y)[1]:1,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            2,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [0]: 1 \\t !== 2",\n'
	+ '            "  [1]: 2 \\t !== 1"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [0]: 1 \\t !== 2",\n'
	+ '            "  [1]: 2 \\t !== 1"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:44 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 57,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:2,arg2=2nd arg (y):[0,1,2],2nd arg (y)[0]:1,2nd arg (y)[1]:2,2nd arg (y)[2]:3,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            1,\n'
	+ '            2,\n'
	+ '            3\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{2:}",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{2:}",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:45 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 58,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):[],arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {},\n'
	+ '        1: {},\n'
	+ '        2: true,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:45 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 59,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (b:2}):[a,b],2nd arg (b:2}).a:1,2nd arg (b:2}).b:2,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:46 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 60,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (b:2}):[b,a],2nd arg (b:2}).b:2,2nd arg (b:2}).a:1,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            b: 2,\n'
	+ '            a: 1\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:46 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 61,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (b:2}):[a,b],2nd arg (b:2}).a:1,2nd arg (b:2}).b:3,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 1,\n'
	+ '            b: 3\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: 2 \\t !== 3"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: 2 \\t !== 3"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:46 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 62,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):null,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {},\n'
	+ '        1: null,\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [null]",\n'
	+ '            " \\t !== •null•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [null]",\n'
	+ '            " \\t !== •null•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:47 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 63,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):undefined,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {},\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=undefined"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [undefined]",\n'
	+ '            " \\t !== •undefined•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [undefined]",\n'
	+ '            " \\t !== •undefined•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:47 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 64,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):[],note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [],\n'
	+ '        1: [],\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:48 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 65,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:2,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:1,2nd arg (y)[1]:2,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:48 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 66,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:2,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:2,2nd arg (y)[1]:1,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            2,\n'
	+ '            1\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [0]: 1 \\t !== 2",\n'
	+ '            "  [1]: 2 \\t !== 1"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "  [0]: 1 \\t !== 2",\n'
	+ '            "  [1]: 2 \\t !== 1"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:48 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 67,\n'
	+ '    id: "arg1=1st arg (x):[0,1],1st arg (x)[0]:1,1st arg (x)[1]:2,arg2=2nd arg (y):[0,1,2],2nd arg (y)[0]:1,2nd arg (y)[1]:2,2nd arg (y)[2]:3,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            1,\n'
	+ '            2,\n'
	+ '            3\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{2:}",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   na \\t ... +{2:}",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:49 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 68,\n'
	+ '    id: "arg1=1st arg (x):[],arg2=2nd arg (y):[],note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {},\n'
	+ '        1: {},\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:49 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 69,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (b:2}):[a,b],2nd arg (b:2}).a:1,2nd arg (b:2}).b:2,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:49 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 70,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (b:2}):[b,a],2nd arg (b:2}).b:2,2nd arg (b:2}).a:1,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            b: 2,\n'
	+ '            a: 1\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:50 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 71,\n'
	+ '    id: "arg1=1st arg (x):[a,b],1st arg (x).a:1,1st arg (x).b:2,arg2=2nd arg (b:2}):[a,b],2nd arg (b:2}).a:1,2nd arg (b:2}).b:3,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: 1,\n'
	+ '            b: 2\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: 1,\n'
	+ '            b: 3\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: 2 \\t !== 3"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: 2 \\t !== 3"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:50 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 72,\n'
	+ '    id: "arg1=1st arg (a):[a,b],1st arg (a).a:text,1st arg (a).b:[0,1],1st arg (a).b[0]:0,1st arg (a).b[1]:1,arg2=2nd arg (b):[a,b],2nd arg (b).a:text,2nd arg (b).b:[0,1],2nd arg (b).b[0]:0,2nd arg (b).b[1]:1,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            b: [\n'
	+ '                0,\n'
	+ '                1\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            b: [\n'
	+ '                0,\n'
	+ '                1\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: true,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:51 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 73,\n'
	+ '    id: "arg1=1st arg (a):[a,b],1st arg (a).a:text,1st arg (a).b:[0,1],1st arg (a).b[0]:0,1st arg (a).b[1]:1,arg2=2nd arg (c):[a,b],2nd arg (c).a:text,2nd arg (c).b:0,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            b: [\n'
	+ '                0,\n'
	+ '                1\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            b: 0\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: [ObjectLike] \\t !== 0"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: [ObjectLike] \\t !== 0"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:51 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 74,\n'
	+ '    id: "arg1=1st arg (c):[a,b],1st arg (c).a:text,1st arg (c).b:0,arg2=2nd arg (d):[a,b],2nd arg (d).a:text,2nd arg (d).b:false,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            b: 0\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            b: false\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: 0 \\t !== •false•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: 0 \\t !== •false•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:51 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 75,\n'
	+ '    id: "arg1=1st arg (a):[a,b],1st arg (a).a:text,1st arg (a).b:[0,1],1st arg (a).b[0]:0,1st arg (a).b[1]:1,arg2=2nd arg (e):[a,b],2nd arg (e).a:text,2nd arg (e).b:[0,1],2nd arg (e).b[0]:1,2nd arg (e).b[1]:0,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            b: [\n'
	+ '                0,\n'
	+ '                1\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            b: [\n'
	+ '                1,\n'
	+ '                0\n'
	+ '            ]\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b[0]: 0 \\t !== 1",\n'
	+ '            "  .b[1]: 1 \\t !== 0"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b[0]: 0 \\t !== 1",\n'
	+ '            "  .b[1]: 1 \\t !== 0"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:52 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 76,\n'
	+ '    id: "arg1=1st arg (i):[a,c],1st arg (i).a:text,1st arg (i).c:[b],1st arg (i).c.b:[0,1],1st arg (i).c.b[0]:1,1st arg (i).c.b[1]:0,arg2=2nd arg (j):[a,c],2nd arg (j).a:text,2nd arg (j).c:[b],2nd arg (j).c.b:[0,1],2nd arg (j).c.b[0]:1,2nd arg (j).c.b[1]:0,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            c: {\n'
	+ '                b: [\n'
	+ '                    1,\n'
	+ '                    0\n'
	+ '                ]\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            c: {\n'
	+ '                b: [\n'
	+ '                    1,\n'
	+ '                    0\n'
	+ '                ]\n'
	+ '            }\n'
	+ '        },\n'
	+ '        2: true,\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:52 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 77,\n'
	+ '    id: "arg1=1st arg (d):[a,b],1st arg (d).a:text,1st arg (d).b:false,arg2=2nd arg (k):[a,b],2nd arg (k).a:text,2nd arg (k).b:null,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            b: false\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            b: null\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: •false• \\t !== •null•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: •false• \\t !== •null•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:53 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 78,\n'
	+ '    id: "arg1=1st arg (k):[a,b],1st arg (k).a:text,1st arg (k).b:null,arg2=2nd arg (l):[a,b],2nd arg (l).a:text,2nd arg (l).b:undefined,arg3=3rd arg (options):true,note:<b>testsfromstackoverflowbasecode</b>",\n'
	+ '    note: "<b>tests from stackoverflow base code</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            a: "text",\n'
	+ '            b: null\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            a: "text",\n'
	+ '            b: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.1.b=undefined"\n'
	+ '            }\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: •null• \\t !== •undefined•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Object] \\t ... 2nd [Object]",\n'
	+ '            "  .b: •null• \\t !== •undefined•"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:53 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 79,\n'
	+ '    id: "arg1=1st arg (x):[0,1,2],1st arg (x)[0]:1,1st arg (x)[1]:2,1st arg (x)[2]:undefined,arg2=2nd arg (y):[0,1],2nd arg (y)[0]:1,2nd arg (y)[1]:2,arg3=3rd arg (undefined]):true,note:<b>fromcommentsonstackoverflowpost</b>",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2,\n'
	+ '            {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.2=undefined"\n'
	+ '            }\n'
	+ '        ],\n'
	+ '        1: [\n'
	+ '            1,\n'
	+ '            2\n'
	+ '        ],\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{2:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Array]",\n'
	+ '            "   *keys do not match*",\n'
	+ '            "   +{2:} \\t ... na",\n'
	+ '            "[ObjectLike] \\t !== [ObjectLike]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:53 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 80,\n'
	+ '    id: "arg1=1st arg (x):[0,1,2],1st arg (x)[0]:1,1st arg (x)[1]:2,1st arg (x)[2]:3,arg2=2nd arg (y):[0,1,2],2nd arg (y)[0]:1,2nd arg (y)[1]:2,2nd arg (y)[2]:3,arg3=3rd arg (options):true,note:<b>fromcommentsonstackoverflowpost</b>",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: [\n'
	+ '            1,\n'
	+ '            2,\n'
	+ '            3\n'
	+ '        ],\n'
	+ '        1: {\n'
	+ '            0: 1,\n'
	+ '            1: 2,\n'
	+ '            2: 3\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Object]",\n'
	+ '            " \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [ObjectLike] \\t ... 2nd [Object]",\n'
	+ '            " \\t !== [Object]"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:54 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 81,\n'
	+ '    id: "arg1=1st arg (new Date(1234)):[],arg2=2nd arg (y):1234,arg3=3rd arg (options):true,note:<b>fromcommentsonstackoverflowpost</b>",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\n\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('12/31/1969 07:00:01.234 pm')"\n'
	+ '        },\n'
	+ '        1: 1234,\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Number]",\n'
	+ '            " \\t !== #"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [Date] \\t ... 2nd [Number]",\n'
	+ '            " \\t !== #"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:54 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: false,\n'
	+ '    testno: 82,\n'
	+ '    id: "arg1=1st arg (x):[x,y],1st arg (x).x:[],1st arg (x).y:{1st arg (x).x},arg2=2nd arg (y: func }):[showDiff,strict],2nd arg (y: func }).showDiff:true,2nd arg (y: func }).strict:Function,note:<b>fromcommentsonstackoverflowpost</b><em>FAILSasof11-23-2016</em>",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\n<em>FAILS as of 11-23-2016</em>\\nshowDiff not specified",\n'
	+ '    warn: "<cite>return value</cite> NOT expected Boolean\\n",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            y: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.y=$.actual.0.x"\n'
	+ '            }\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            showDiff: true,\n'
	+ '            strict: "Function"\n'
	+ '        },\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:55 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: false,\n'
	+ '    testno: 83,\n'
	+ '    id: "arg1=1st arg (func):[],arg2=2nd arg (func):[],arg3=3rd arg (options):[showDiff,strict],3rd arg (options).showDiff:true,3rd arg (options).strict:Function,note:<b>fromcommentsonstackoverflowpost</b><em>FAILSasof11-23-2016</em>",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\n<em>FAILS as of 11-23-2016</em>\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "<cite>return value</cite> NOT expected Boolean\\n",\n'
	+ '    actual: {\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "function clone()\\n{ lines: 0 } \\t !== function clone()\\n{ lines: 0 }"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:55 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 84,\n'
	+ '    id: "arg1=1st arg (func):[],arg2=2nd arg (funcSame):[],arg3=3rd arg (options):[showDiff,strict],3rd arg (options).showDiff:true,3rd arg (options).strict:Function,note:<b>fromcommentsonstackoverflowpost</b>NOTequalwithsamescriptwhenoptions.strict==\\"Function\\"",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\nNOT equal with same script when options.strict == \\"Function\\"\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "function clone()\\n{ lines: 0 } \\t !== function clone()\\n{ lines: 0 }"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "function clone()\\n{ lines: 0 } \\t !== function clone()\\n{ lines: 0 }"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:55 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 85,\n'
	+ '    id: "arg1=1st arg (func):[],arg2=2nd arg (funcSame):[],arg3=3rd arg (options):[showDiff],3rd arg (options).showDiff:true,note:<b>fromcommentsonstackoverflowpost</b>ISequalwithsamescriptwhenoptions.strict!=\\"Function\\"",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\nIS equal with same script when options.strict != \\"Function\\"",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:56 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 86,\n'
	+ '    id: "arg1=1st arg (func):[],arg2=2nd arg (funcDiff):[],arg3=3rd arg (options):[showDiff],3rd arg (options).showDiff:true,note:<b>fromcommentsonstackoverflowpost</b>notsamescript",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\nnot same script\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "function clone()\\n{ lines: 0 } \\t !== function clone()\\n{ lines: 0 }"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "function clone()\\n{ lines: 0 } \\t !== function clone()\\n{ lines: 0 }"\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:56 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 87,\n'
	+ '    id: "arg1=1st arg (func):[aKey],1st arg (func).aKey:same value,arg2=2nd arg (funcSame):[aKey],2nd arg (funcSame).aKey:same value,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>fromcommentsonstackoverflowpost</b>samescript--sameenumerableproperties",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\nsame script -- same enumerable properties",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            aKey: "same value"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            aKey: "same value"\n'
	+ '        },\n'
	+ '        2: {\n'
	+ '            showDiff: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:57 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 88,\n'
	+ '    id: "arg1=1st arg (func):[aKey],1st arg (func).aKey:same value,arg2=2nd arg (funcSame):[aKey],2nd arg (funcSame).aKey:diff value,arg3=3rd arg (showDiff):[showDiff],3rd arg (showDiff).showDiff:true,note:<b>fromcommentsonstackoverflowpost</b>samescript--DIFFERENTenumerableproperties",\n'
	+ '    note: "<b>from comments on stackoverflow post</b>\\nsame script -- DIFFERENT enumerable properties\\nreturn value for 3rd arg set to <cite>showDiff log</cite>",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            aKey: "same value"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            aKey: "diff value"\n'
	+ '        },\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "  .aKey: \\"same value\\" \\t !== \\"diff value\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        2: [\n'
	+ '            "1st [clone] \\t ... 2nd [Function]",\n'
	+ '            "  .aKey: \\"same value\\" \\t !== \\"diff value\\""\n'
	+ '        ],\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:57 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 89,\n'
	+ '    id: "arg1=1st arg (obj):[argsOk,testOk,display_results,ok,used],1st arg (obj).argsOk:true,1st arg (obj).testOk:false,1st arg (obj).display_results:@test not run@,1st arg (obj).ok:false,1st arg (obj).used:true,arg2=2nd arg (o):[argsOk,testOk,display_results,ok],2nd arg (o).argsOk:true,2nd arg (o).testOk:false,2nd arg (o).display_results:@test not run@,2nd arg (o).ok:true,note:<b>issuesfromtestassistant</b>diffkeys--okhasdiffvalues",\n'
	+ '    note: "<b>issues from test assistant</b>\\ndiff keys -- ok has diff values\\nshowDiff not specified",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: false,\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: true\n'
	+ '        },\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:57 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 90,\n'
	+ '    id: "arg1=1st arg (obj):[argsOk,testOk,display_results,ok,used],1st arg (obj).argsOk:true,1st arg (obj).testOk:false,1st arg (obj).display_results:@test not run@,1st arg (obj).ok:false,1st arg (obj).used:false,arg2=2nd arg (o):[argsOk,testOk,display_results,ok],2nd arg (o).argsOk:true,2nd arg (o).testOk:false,2nd arg (o).display_results:@test not run@,2nd arg (o).ok:false,note:<b>issuesfromtestassistant</b>diffkeys--samevalues",\n'
	+ '    note: "<b>issues from test assistant</b>\\ndiff keys -- same values\\nshowDiff not specified",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: false,\n'
	+ '            used: false\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: false\n'
	+ '        },\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:58 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 91,\n'
	+ '    id: "arg1=1st arg (obj):[argsOk,testOk,display_results,ok,used],1st arg (obj).argsOk:true,1st arg (obj).testOk:false,1st arg (obj).display_results:@test not run@,1st arg (obj).ok:false,1st arg (obj).used:true,arg2=2nd arg (o):[argsOk,testOk,display_results,ok,used],2nd arg (o).argsOk:true,2nd arg (o).testOk:false,2nd arg (o).display_results:@test not run@,2nd arg (o).ok:true,2nd arg (o).used:true,note:<b>issuesfromtestassistant</b>samekeys--okhasdiffvalues",\n'
	+ '    note: "<b>issues from test assistant</b>\\nsame keys --  ok has diff values\\nshowDiff not specified",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: false,\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: true,\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:58 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 92,\n'
	+ '    id: "arg1=1st arg (obj):[argsOk,testOk,display_results,ok,used],1st arg (obj).argsOk:true,1st arg (obj).testOk:false,1st arg (obj).display_results:@test not run@,1st arg (obj).ok:true,1st arg (obj).used:true,arg2=2nd arg (o):[argsOk,testOk,display_results,ok,used],2nd arg (o).argsOk:true,2nd arg (o).testOk:false,2nd arg (o).display_results:@test not run@,2nd arg (o).ok:true,2nd arg (o).used:true,note:<b>issuesfromtestassistant</b>samekeys--samevalues",\n'
	+ '    note: "<b>issues from test assistant</b>\\nsame keys --  same values",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: true,\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: true,\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:58 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 93,\n'
	+ '    id: "arg1=1st arg (obj):[note,expected,ctxRequired,args,display_args,ctx,errmsg,testno,display_expected,results,ctxOk,argsOk,testOk,display_results,ok,used],1st arg (obj).note:test options: none\\nthis undefined,1st arg (obj).expected:[args,ctx,results],1st arg (obj).expected.args:[],1st arg (obj).expected.ctx:@not specified@,1st arg (obj).expected.results:@not specified@,1st arg (obj).ctxRequired:true,1st arg (obj).args:[],1st arg (obj).display_args:<pre><i>Array </i> @undefined@\\n</pre>,1st arg (obj).ctx:undefined,1st arg (obj).errmsg:\\"this\\" not same type as function prototype,1st arg (obj).testno:5,1st arg (obj).display_expected:@no expected values supplied@,1st arg (obj).results:@test not run@,1st arg (obj).ctxOk:true,1st arg (obj).argsOk:true,1st arg (obj).testOk:false,1st arg (obj).display_results:@test not run@,1st arg (obj).ok:false,1st arg (obj).used:true,arg2=2nd arg (o):[note,expected,ctxRequired,args,display_args,ctx,errmsg,testno,display_expected,results,ctxOk,argsOk,testOk,display_results,ok],2nd arg (o).note:test options: none\\nthis undefined,2nd arg (o).expected:[args,ctx,results],2nd arg (o).expected.args:[],2nd arg (o).expected.ctx:@not specified@,2nd arg (o).expected.results:@not specified@,2nd arg (o).ctxRequired:true,2nd arg (o).args:[],2nd arg (o).display_args:<pre><i>Array </i> @undefined@\\n</pre>,2nd arg (o).ctx:undefined,2nd arg (o).errmsg:\\"this\\" not same type as function prototype,2nd arg (o).testno:5,2nd arg (o).display_expected:@no expected values supplied@,2nd arg (o).results:@test not run@,2nd arg (o).ctxOk:true,2nd arg (o).argsOk:true,2nd arg (o).testOk:false,2nd arg (o).display_results:@test not run@,2nd arg (o).ok:true,note:<b>issuesfromtestassistant</b>morekeys--notequal",\n'
	+ '    note: "<b>issues from test assistant</b>\\nmore keys -- not equal\\nshowDiff not specified",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            note: "test options: none\\nthis undefined",\n'
	+ '            expected: {\n'
	+ '                args: [],\n'
	+ '                ctx: "@not specified@",\n'
	+ '                results: "@not specified@"\n'
	+ '            },\n'
	+ '            ctxRequired: true,\n'
	+ '            args: [],\n'
	+ '            display_args: "<pre><i>Array </i> @undefined@\\n</pre>",\n'
	+ '            ctx: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.ctx=undefined"\n'
	+ '            },\n'
	+ '            errmsg: "\\"this\\" not same type as function prototype",\n'
	+ '            testno: 5,\n'
	+ '            display_expected: "@no expected values supplied@",\n'
	+ '            results: "@test not run@",\n'
	+ '            ctxOk: true,\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: false,\n'
	+ '            used: true\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            note: "test options: none\\nthis undefined",\n'
	+ '            expected: {\n'
	+ '                args: [],\n'
	+ '                ctx: "@not specified@",\n'
	+ '                results: "@not specified@"\n'
	+ '            },\n'
	+ '            ctxRequired: true,\n'
	+ '            args: [],\n'
	+ '            display_args: "<pre><i>Array </i> @undefined@\\n</pre>",\n'
	+ '            ctx: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.1.ctx=undefined"\n'
	+ '            },\n'
	+ '            errmsg: "\\"this\\" not same type as function prototype",\n'
	+ '            testno: 5,\n'
	+ '            display_expected: "@no expected values supplied@",\n'
	+ '            results: "@test not run@",\n'
	+ '            ctxOk: true,\n'
	+ '            argsOk: true,\n'
	+ '            testOk: false,\n'
	+ '            display_results: "@test not run@",\n'
	+ '            ok: true\n'
	+ '        },\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: false\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:59 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 94,\n'
	+ '    id: "arg1=1st arg (x):[2,11,b,a],1st arg (x)[2]:1st,1st arg (x)[11]:2nd,1st arg (x).b:4th,1st arg (x).a:3rd,arg2=2nd arg (y):[2,11,a,b],2nd arg (y)[2]:1st,2nd arg (y)[11]:2nd,2nd arg (y).a:3rd,2nd arg (y).b:4th,note:<b>livefaults:</b>created@07-05-201603:08:51pm",\n'
	+ '    note: "<b>live faults:</b> created @ 07-05-2016 03:08:51pm",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            2: "1st",\n'
	+ '            11: "2nd",\n'
	+ '            b: "4th",\n'
	+ '            a: "3rd"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            2: "1st",\n'
	+ '            11: "2nd",\n'
	+ '            a: "3rd",\n'
	+ '            b: "4th"\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:59 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 95,\n'
	+ '    id: "arg1=1st arg (new Date(######)):[],arg2=2nd arg (new Date(######)):[],note:<b>livefaults:</b>invaliddatesshouldbeequal",\n'
	+ '    note: "<b>live faults:</b> invalid dates should be equal",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.0=new Date('''')"\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            "@JSON_escapeMarker@": "$.actual.1=new Date('''')"\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:47:59 am"\n'
	+ '}'
,
	''
	+ '{\n'
	+ '    ok: true,\n'
	+ '    testno: 96,\n'
	+ '    id: "arg1=1st arg (x):[children,objects,functions,maxdepth],1st arg (x).children:true,1st arg (x).objects:[],1st arg (x).functions:false,1st arg (x).maxdepth:4,arg2=2nd arg (y):[children,objects,functions,maxdepth],2nd arg (y).children:true,2nd arg (y).objects:[],2nd arg (y).functions:false,2nd arg (y).maxdepth:4,note:<b>livefaults:</b>",\n'
	+ '    note: "<b>live faults:</b> ",\n'
	+ '    warn: "",\n'
	+ '    actual: {\n'
	+ '        0: {\n'
	+ '            children: true,\n'
	+ '            functions: false,\n'
	+ '            maxdepth: 4\n'
	+ '        },\n'
	+ '        1: {\n'
	+ '            children: true,\n'
	+ '            objects: {\n'
	+ '                "@JSON_escapeMarker@": "$.actual.0.1.objects=$.actual.0.objects"\n'
	+ '            },\n'
	+ '            functions: false,\n'
	+ '            maxdepth: 4\n'
	+ '        },\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    expected: {\n'
	+ '        results: true\n'
	+ '    },\n'
	+ '    saveDateTime: "11-24-2016 10:48:00 am"\n'
	+ '}'
]